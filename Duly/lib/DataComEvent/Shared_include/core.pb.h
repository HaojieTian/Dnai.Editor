// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

#ifndef PROTOBUF_core_2eproto__INCLUDED
#define PROTOBUF_core_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class AddClassAttribute;
class AddClassAttributeDefaultTypeInternal;
extern AddClassAttributeDefaultTypeInternal _AddClassAttribute_default_instance_;
class AddClassMemberFunction;
class AddClassMemberFunctionDefaultTypeInternal;
extern AddClassMemberFunctionDefaultTypeInternal _AddClassMemberFunction_default_instance_;
class AddInstruction;
class AddInstructionDefaultTypeInternal;
extern AddInstructionDefaultTypeInternal _AddInstruction_default_instance_;
class CallFunction;
class CallFunctionDefaultTypeInternal;
extern CallFunctionDefaultTypeInternal _CallFunction_default_instance_;
class CallFunction_ParametersEntry;
class CallFunction_ParametersEntryDefaultTypeInternal;
extern CallFunction_ParametersEntryDefaultTypeInternal _CallFunction_ParametersEntry_default_instance_;
class ChangeVisibility;
class ChangeVisibilityDefaultTypeInternal;
extern ChangeVisibilityDefaultTypeInternal _ChangeVisibility_default_instance_;
class Declare;
class DeclareDefaultTypeInternal;
extern DeclareDefaultTypeInternal _Declare_default_instance_;
class Default;
class DefaultDefaultTypeInternal;
extern DefaultDefaultTypeInternal _Default_default_instance_;
class GetEnumerationValue;
class GetEnumerationValueDefaultTypeInternal;
extern GetEnumerationValueDefaultTypeInternal _GetEnumerationValue_default_instance_;
class GetVariableValue;
class GetVariableValueDefaultTypeInternal;
extern GetVariableValueDefaultTypeInternal _GetVariableValue_default_instance_;
class LinkInstructionData;
class LinkInstructionDataDefaultTypeInternal;
extern LinkInstructionDataDefaultTypeInternal _LinkInstructionData_default_instance_;
class LinkInstructionExecution;
class LinkInstructionExecutionDefaultTypeInternal;
extern LinkInstructionExecutionDefaultTypeInternal _LinkInstructionExecution_default_instance_;
class Move;
class MoveDefaultTypeInternal;
extern MoveDefaultTypeInternal _Move_default_instance_;
class Object;
class ObjectDefaultTypeInternal;
extern ObjectDefaultTypeInternal _Object_default_instance_;
class Remove;
class RemoveDefaultTypeInternal;
extern RemoveDefaultTypeInternal _Remove_default_instance_;
class RemoveClassAttribute;
class RemoveClassAttributeDefaultTypeInternal;
extern RemoveClassAttributeDefaultTypeInternal _RemoveClassAttribute_default_instance_;
class RemoveEnumerationValue;
class RemoveEnumerationValueDefaultTypeInternal;
extern RemoveEnumerationValueDefaultTypeInternal _RemoveEnumerationValue_default_instance_;
class RemoveFunctionInstruction;
class RemoveFunctionInstructionDefaultTypeInternal;
extern RemoveFunctionInstructionDefaultTypeInternal _RemoveFunctionInstruction_default_instance_;
class Rename;
class RenameDefaultTypeInternal;
extern RenameDefaultTypeInternal _Rename_default_instance_;
class RenameClassAttribute;
class RenameClassAttributeDefaultTypeInternal;
extern RenameClassAttributeDefaultTypeInternal _RenameClassAttribute_default_instance_;
class SetContextParent;
class SetContextParentDefaultTypeInternal;
extern SetContextParentDefaultTypeInternal _SetContextParent_default_instance_;
class SetEnumerationType;
class SetEnumerationTypeDefaultTypeInternal;
extern SetEnumerationTypeDefaultTypeInternal _SetEnumerationType_default_instance_;
class SetEnumerationValue;
class SetEnumerationValueDefaultTypeInternal;
extern SetEnumerationValueDefaultTypeInternal _SetEnumerationValue_default_instance_;
class SetFunctionEntryPoint;
class SetFunctionEntryPointDefaultTypeInternal;
extern SetFunctionEntryPointDefaultTypeInternal _SetFunctionEntryPoint_default_instance_;
class SetFunctionParameter;
class SetFunctionParameterDefaultTypeInternal;
extern SetFunctionParameterDefaultTypeInternal _SetFunctionParameter_default_instance_;
class SetFunctionReturn;
class SetFunctionReturnDefaultTypeInternal;
extern SetFunctionReturnDefaultTypeInternal _SetFunctionReturn_default_instance_;
class SetInstructionInputValue;
class SetInstructionInputValueDefaultTypeInternal;
extern SetInstructionInputValueDefaultTypeInternal _SetInstructionInputValue_default_instance_;
class SetListType;
class SetListTypeDefaultTypeInternal;
extern SetListTypeDefaultTypeInternal _SetListType_default_instance_;
class SetVariableType;
class SetVariableTypeDefaultTypeInternal;
extern SetVariableTypeDefaultTypeInternal _SetVariableType_default_instance_;
class SetVariableValue;
class SetVariableValueDefaultTypeInternal;
extern SetVariableValueDefaultTypeInternal _SetVariableValue_default_instance_;
class UnlinkInstructionFlow;
class UnlinkInstructionFlowDefaultTypeInternal;
extern UnlinkInstructionFlowDefaultTypeInternal _UnlinkInstructionFlow_default_instance_;
class UnlinkInstructionInput;
class UnlinkInstructionInputDefaultTypeInternal;
extern UnlinkInstructionInputDefaultTypeInternal _UnlinkInstructionInput_default_instance_;

namespace protobuf_core_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_core_2eproto

enum ENTITY {
  CONTEXT_D = 0,
  VARIABLE = 1,
  FUNCTION = 2,
  DATA_TYPE = 3,
  ENUM_TYPE = 4,
  OBJECT_TYPE = 5,
  LIST_TYPE = 6,
  ENTITY_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ENTITY_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ENTITY_IsValid(int value);
const ENTITY ENTITY_MIN = CONTEXT_D;
const ENTITY ENTITY_MAX = LIST_TYPE;
const int ENTITY_ARRAYSIZE = ENTITY_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENTITY_descriptor();
inline const ::std::string& ENTITY_Name(ENTITY value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENTITY_descriptor(), value);
}
inline bool ENTITY_Parse(
    const ::std::string& name, ENTITY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENTITY>(
    ENTITY_descriptor(), name, value);
}
enum INSTRUCTION_ID {
  AND = 0,
  OR = 1,
  DIFFERENT = 2,
  EQUAL = 3,
  GREATER = 4,
  GREATER_EQUAL = 5,
  LOWER = 6,
  LOWER_EQUAL = 7,
  ACCESS = 8,
  BINARY_AND = 9,
  BINARY_OR = 10,
  XOR = 11,
  ADD = 12,
  SUB = 13,
  DIV = 14,
  MUL = 15,
  MOD = 16,
  LEFT_SHIFT = 17,
  RIGHT_SHIFT = 18,
  BINARY_NOT = 19,
  NOT = 20,
  INVERSE = 21,
  ENUM_SPLITTER = 22,
  GETTER = 23,
  SETTER = 24,
  FUNCTION_CALL = 25,
  IF = 26,
  WHILE = 27,
  INSTRUCTION_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  INSTRUCTION_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool INSTRUCTION_ID_IsValid(int value);
const INSTRUCTION_ID INSTRUCTION_ID_MIN = AND;
const INSTRUCTION_ID INSTRUCTION_ID_MAX = WHILE;
const int INSTRUCTION_ID_ARRAYSIZE = INSTRUCTION_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* INSTRUCTION_ID_descriptor();
inline const ::std::string& INSTRUCTION_ID_Name(INSTRUCTION_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    INSTRUCTION_ID_descriptor(), value);
}
inline bool INSTRUCTION_ID_Parse(
    const ::std::string& name, INSTRUCTION_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<INSTRUCTION_ID>(
    INSTRUCTION_ID_descriptor(), name, value);
}
enum VISIBILITY {
  PRIVATE = 0,
  PUBLIC = 1,
  VISIBILITY_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VISIBILITY_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VISIBILITY_IsValid(int value);
const VISIBILITY VISIBILITY_MIN = PRIVATE;
const VISIBILITY VISIBILITY_MAX = PUBLIC;
const int VISIBILITY_ARRAYSIZE = VISIBILITY_MAX + 1;

const ::google::protobuf::EnumDescriptor* VISIBILITY_descriptor();
inline const ::std::string& VISIBILITY_Name(VISIBILITY value) {
  return ::google::protobuf::internal::NameOfEnum(
    VISIBILITY_descriptor(), value);
}
inline bool VISIBILITY_Parse(
    const ::std::string& name, VISIBILITY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VISIBILITY>(
    VISIBILITY_descriptor(), name, value);
}
// ===================================================================

class AddClassAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AddClassAttribute) */ {
 public:
  AddClassAttribute();
  virtual ~AddClassAttribute();

  AddClassAttribute(const AddClassAttribute& from);

  inline AddClassAttribute& operator=(const AddClassAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddClassAttribute& default_instance();

  static inline const AddClassAttribute* internal_default_instance() {
    return reinterpret_cast<const AddClassAttribute*>(
               &_AddClassAttribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AddClassAttribute* other);

  // implements Message ----------------------------------------------

  inline AddClassAttribute* New() const PROTOBUF_FINAL { return New(NULL); }

  AddClassAttribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddClassAttribute& from);
  void MergeFrom(const AddClassAttribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddClassAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 ClassId = 1;
  void clear_classid();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::uint32 classid() const;
  void set_classid(::google::protobuf::uint32 value);

  // uint32 TypeId = 3;
  void clear_typeid_();
  static const int kTypeIdFieldNumber = 3;
  ::google::protobuf::uint32 typeid_() const;
  void set_typeid_(::google::protobuf::uint32 value);

  // .VISIBILITY Visibility = 4;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 4;
  ::VISIBILITY visibility() const;
  void set_visibility(::VISIBILITY value);

  // @@protoc_insertion_point(class_scope:AddClassAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 classid_;
  ::google::protobuf::uint32 typeid__;
  int visibility_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddClassMemberFunction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AddClassMemberFunction) */ {
 public:
  AddClassMemberFunction();
  virtual ~AddClassMemberFunction();

  AddClassMemberFunction(const AddClassMemberFunction& from);

  inline AddClassMemberFunction& operator=(const AddClassMemberFunction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddClassMemberFunction& default_instance();

  static inline const AddClassMemberFunction* internal_default_instance() {
    return reinterpret_cast<const AddClassMemberFunction*>(
               &_AddClassMemberFunction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AddClassMemberFunction* other);

  // implements Message ----------------------------------------------

  inline AddClassMemberFunction* New() const PROTOBUF_FINAL { return New(NULL); }

  AddClassMemberFunction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddClassMemberFunction& from);
  void MergeFrom(const AddClassMemberFunction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddClassMemberFunction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 ClassId = 1;
  void clear_classid();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::uint32 classid() const;
  void set_classid(::google::protobuf::uint32 value);

  // .VISIBILITY Visibility = 3;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 3;
  ::VISIBILITY visibility() const;
  void set_visibility(::VISIBILITY value);

  // @@protoc_insertion_point(class_scope:AddClassMemberFunction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 classid_;
  int visibility_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddInstruction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AddInstruction) */ {
 public:
  AddInstruction();
  virtual ~AddInstruction();

  AddInstruction(const AddInstruction& from);

  inline AddInstruction& operator=(const AddInstruction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddInstruction& default_instance();

  static inline const AddInstruction* internal_default_instance() {
    return reinterpret_cast<const AddInstruction*>(
               &_AddInstruction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AddInstruction* other);

  // implements Message ----------------------------------------------

  inline AddInstruction* New() const PROTOBUF_FINAL { return New(NULL); }

  AddInstruction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddInstruction& from);
  void MergeFrom(const AddInstruction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddInstruction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 Arguments = 3 [packed = false];
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 3;
  ::google::protobuf::uint32 arguments(int index) const;
  void set_arguments(int index, ::google::protobuf::uint32 value);
  void add_arguments(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      arguments() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_arguments();

  // uint32 FunctionID = 1;
  void clear_functionid();
  static const int kFunctionIDFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // .INSTRUCTION_ID ToCreate = 2;
  void clear_tocreate();
  static const int kToCreateFieldNumber = 2;
  ::INSTRUCTION_ID tocreate() const;
  void set_tocreate(::INSTRUCTION_ID value);

  // @@protoc_insertion_point(class_scope:AddInstruction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > arguments_;
  ::google::protobuf::uint32 functionid_;
  int tocreate_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CallFunction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CallFunction) */ {
 public:
  CallFunction();
  virtual ~CallFunction();

  CallFunction(const CallFunction& from);

  inline CallFunction& operator=(const CallFunction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CallFunction& default_instance();

  static inline const CallFunction* internal_default_instance() {
    return reinterpret_cast<const CallFunction*>(
               &_CallFunction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CallFunction* other);

  // implements Message ----------------------------------------------

  inline CallFunction* New() const PROTOBUF_FINAL { return New(NULL); }

  CallFunction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CallFunction& from);
  void MergeFrom(const CallFunction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CallFunction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .Object> Parameters = 2;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::Object >&
      parameters() const;
  ::google::protobuf::Map< ::std::string, ::Object >*
      mutable_parameters();

  // uint32 FuncId = 1;
  void clear_funcid();
  static const int kFuncIdFieldNumber = 1;
  ::google::protobuf::uint32 funcid() const;
  void set_funcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CallFunction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class CallFunction_ParametersEntry : public ::google::protobuf::internal::MapEntry<CallFunction_ParametersEntry, 
      ::std::string, ::Object,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CallFunction_ParametersEntry, 
      ::std::string, ::Object,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    CallFunction_ParametersEntry();
    CallFunction_ParametersEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CallFunction_ParametersEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CallFunction_ParametersEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      CallFunction_ParametersEntry,
      ::std::string, ::Object,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > parameters_;
  private:
  ::google::protobuf::uint32 funcid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeVisibility : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChangeVisibility) */ {
 public:
  ChangeVisibility();
  virtual ~ChangeVisibility();

  ChangeVisibility(const ChangeVisibility& from);

  inline ChangeVisibility& operator=(const ChangeVisibility& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeVisibility& default_instance();

  static inline const ChangeVisibility* internal_default_instance() {
    return reinterpret_cast<const ChangeVisibility*>(
               &_ChangeVisibility_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ChangeVisibility* other);

  // implements Message ----------------------------------------------

  inline ChangeVisibility* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeVisibility* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeVisibility& from);
  void MergeFrom(const ChangeVisibility& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeVisibility* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .ENTITY EntityType = 1;
  void clear_entitytype();
  static const int kEntityTypeFieldNumber = 1;
  ::ENTITY entitytype() const;
  void set_entitytype(::ENTITY value);

  // uint32 ContainerID = 2;
  void clear_containerid();
  static const int kContainerIDFieldNumber = 2;
  ::google::protobuf::uint32 containerid() const;
  void set_containerid(::google::protobuf::uint32 value);

  // .VISIBILITY NewVisi = 4;
  void clear_newvisi();
  static const int kNewVisiFieldNumber = 4;
  ::VISIBILITY newvisi() const;
  void set_newvisi(::VISIBILITY value);

  // @@protoc_insertion_point(class_scope:ChangeVisibility)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int entitytype_;
  ::google::protobuf::uint32 containerid_;
  int newvisi_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Declare : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Declare) */ {
 public:
  Declare();
  virtual ~Declare();

  Declare(const Declare& from);

  inline Declare& operator=(const Declare& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Declare& default_instance();

  static inline const Declare* internal_default_instance() {
    return reinterpret_cast<const Declare*>(
               &_Declare_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Declare* other);

  // implements Message ----------------------------------------------

  inline Declare* New() const PROTOBUF_FINAL { return New(NULL); }

  Declare* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Declare& from);
  void MergeFrom(const Declare& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Declare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .ENTITY EntityType = 1;
  void clear_entitytype();
  static const int kEntityTypeFieldNumber = 1;
  ::ENTITY entitytype() const;
  void set_entitytype(::ENTITY value);

  // uint32 ContainerID = 2;
  void clear_containerid();
  static const int kContainerIDFieldNumber = 2;
  ::google::protobuf::uint32 containerid() const;
  void set_containerid(::google::protobuf::uint32 value);

  // .VISIBILITY Visibility = 4;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 4;
  ::VISIBILITY visibility() const;
  void set_visibility(::VISIBILITY value);

  // @@protoc_insertion_point(class_scope:Declare)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int entitytype_;
  ::google::protobuf::uint32 containerid_;
  int visibility_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Default : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Default) */ {
 public:
  Default();
  virtual ~Default();

  Default(const Default& from);

  inline Default& operator=(const Default& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Default& default_instance();

  static inline const Default* internal_default_instance() {
    return reinterpret_cast<const Default*>(
               &_Default_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Default* other);

  // implements Message ----------------------------------------------

  inline Default* New() const PROTOBUF_FINAL { return New(NULL); }

  Default* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Default& from);
  void MergeFrom(const Default& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Default* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Declare Declare = 1;
  bool has_declare() const;
  void clear_declare();
  static const int kDeclareFieldNumber = 1;
  const ::Declare& declare() const;
  ::Declare* mutable_declare();
  ::Declare* release_declare();
  void set_allocated_declare(::Declare* declare);

  // .Remove Remove = 2;
  bool has_remove() const;
  void clear_remove();
  static const int kRemoveFieldNumber = 2;
  const ::Remove& remove() const;
  ::Remove* mutable_remove();
  ::Remove* release_remove();
  void set_allocated_remove(::Remove* remove);

  // .Rename Rename = 3;
  bool has_rename() const;
  void clear_rename();
  static const int kRenameFieldNumber = 3;
  const ::Rename& rename() const;
  ::Rename* mutable_rename();
  ::Rename* release_rename();
  void set_allocated_rename(::Rename* rename);

  // .Move Move = 4;
  bool has_move() const;
  void clear_move();
  static const int kMoveFieldNumber = 4;
  const ::Move& move() const;
  ::Move* mutable_move();
  ::Move* release_move();
  void set_allocated_move(::Move* move);

  // .ChangeVisibility ChangeVisibility = 5;
  bool has_changevisibility() const;
  void clear_changevisibility();
  static const int kChangeVisibilityFieldNumber = 5;
  const ::ChangeVisibility& changevisibility() const;
  ::ChangeVisibility* mutable_changevisibility();
  ::ChangeVisibility* release_changevisibility();
  void set_allocated_changevisibility(::ChangeVisibility* changevisibility);

  // .SetVariableValue SetVariableValue = 6;
  bool has_setvariablevalue() const;
  void clear_setvariablevalue();
  static const int kSetVariableValueFieldNumber = 6;
  const ::SetVariableValue& setvariablevalue() const;
  ::SetVariableValue* mutable_setvariablevalue();
  ::SetVariableValue* release_setvariablevalue();
  void set_allocated_setvariablevalue(::SetVariableValue* setvariablevalue);

  // .SetVariableType SetVariableType = 7;
  bool has_setvariabletype() const;
  void clear_setvariabletype();
  static const int kSetVariableTypeFieldNumber = 7;
  const ::SetVariableType& setvariabletype() const;
  ::SetVariableType* mutable_setvariabletype();
  ::SetVariableType* release_setvariabletype();
  void set_allocated_setvariabletype(::SetVariableType* setvariabletype);

  // .GetVariableValue GetVariableValue = 8;
  bool has_getvariablevalue() const;
  void clear_getvariablevalue();
  static const int kGetVariableValueFieldNumber = 8;
  const ::GetVariableValue& getvariablevalue() const;
  ::GetVariableValue* mutable_getvariablevalue();
  ::GetVariableValue* release_getvariablevalue();
  void set_allocated_getvariablevalue(::GetVariableValue* getvariablevalue);

  // .SetContextParent SetContextParent = 9;
  bool has_setcontextparent() const;
  void clear_setcontextparent();
  static const int kSetContextParentFieldNumber = 9;
  const ::SetContextParent& setcontextparent() const;
  ::SetContextParent* mutable_setcontextparent();
  ::SetContextParent* release_setcontextparent();
  void set_allocated_setcontextparent(::SetContextParent* setcontextparent);

  // .SetEnumerationType SetEnumerationType = 10;
  bool has_setenumerationtype() const;
  void clear_setenumerationtype();
  static const int kSetEnumerationTypeFieldNumber = 10;
  const ::SetEnumerationType& setenumerationtype() const;
  ::SetEnumerationType* mutable_setenumerationtype();
  ::SetEnumerationType* release_setenumerationtype();
  void set_allocated_setenumerationtype(::SetEnumerationType* setenumerationtype);

  // .SetEnumerationValue SetEnumerationValue = 11;
  bool has_setenumerationvalue() const;
  void clear_setenumerationvalue();
  static const int kSetEnumerationValueFieldNumber = 11;
  const ::SetEnumerationValue& setenumerationvalue() const;
  ::SetEnumerationValue* mutable_setenumerationvalue();
  ::SetEnumerationValue* release_setenumerationvalue();
  void set_allocated_setenumerationvalue(::SetEnumerationValue* setenumerationvalue);

  // .GetEnumerationValue GetEnumerationValue = 12;
  bool has_getenumerationvalue() const;
  void clear_getenumerationvalue();
  static const int kGetEnumerationValueFieldNumber = 12;
  const ::GetEnumerationValue& getenumerationvalue() const;
  ::GetEnumerationValue* mutable_getenumerationvalue();
  ::GetEnumerationValue* release_getenumerationvalue();
  void set_allocated_getenumerationvalue(::GetEnumerationValue* getenumerationvalue);

  // .RemoveEnumerationValue RemoveEnumerationValue = 13;
  bool has_removeenumerationvalue() const;
  void clear_removeenumerationvalue();
  static const int kRemoveEnumerationValueFieldNumber = 13;
  const ::RemoveEnumerationValue& removeenumerationvalue() const;
  ::RemoveEnumerationValue* mutable_removeenumerationvalue();
  ::RemoveEnumerationValue* release_removeenumerationvalue();
  void set_allocated_removeenumerationvalue(::RemoveEnumerationValue* removeenumerationvalue);

  // .AddClassAttribute AddClassAttribute = 14;
  bool has_addclassattribute() const;
  void clear_addclassattribute();
  static const int kAddClassAttributeFieldNumber = 14;
  const ::AddClassAttribute& addclassattribute() const;
  ::AddClassAttribute* mutable_addclassattribute();
  ::AddClassAttribute* release_addclassattribute();
  void set_allocated_addclassattribute(::AddClassAttribute* addclassattribute);

  // .RenameClassAttribute RenameClassAttribute = 15;
  bool has_renameclassattribute() const;
  void clear_renameclassattribute();
  static const int kRenameClassAttributeFieldNumber = 15;
  const ::RenameClassAttribute& renameclassattribute() const;
  ::RenameClassAttribute* mutable_renameclassattribute();
  ::RenameClassAttribute* release_renameclassattribute();
  void set_allocated_renameclassattribute(::RenameClassAttribute* renameclassattribute);

  // .RemoveClassAttribute RemoveClassAttribute = 16;
  bool has_removeclassattribute() const;
  void clear_removeclassattribute();
  static const int kRemoveClassAttributeFieldNumber = 16;
  const ::RemoveClassAttribute& removeclassattribute() const;
  ::RemoveClassAttribute* mutable_removeclassattribute();
  ::RemoveClassAttribute* release_removeclassattribute();
  void set_allocated_removeclassattribute(::RemoveClassAttribute* removeclassattribute);

  // .AddClassMemberFunction AddClassMemberFunction = 17;
  bool has_addclassmemberfunction() const;
  void clear_addclassmemberfunction();
  static const int kAddClassMemberFunctionFieldNumber = 17;
  const ::AddClassMemberFunction& addclassmemberfunction() const;
  ::AddClassMemberFunction* mutable_addclassmemberfunction();
  ::AddClassMemberFunction* release_addclassmemberfunction();
  void set_allocated_addclassmemberfunction(::AddClassMemberFunction* addclassmemberfunction);

  // .SetListType SetListType = 18;
  bool has_setlisttype() const;
  void clear_setlisttype();
  static const int kSetListTypeFieldNumber = 18;
  const ::SetListType& setlisttype() const;
  ::SetListType* mutable_setlisttype();
  ::SetListType* release_setlisttype();
  void set_allocated_setlisttype(::SetListType* setlisttype);

  // .CallFunction CallFunction = 19;
  bool has_callfunction() const;
  void clear_callfunction();
  static const int kCallFunctionFieldNumber = 19;
  const ::CallFunction& callfunction() const;
  ::CallFunction* mutable_callfunction();
  ::CallFunction* release_callfunction();
  void set_allocated_callfunction(::CallFunction* callfunction);

  // .SetFunctionParameter SetFunctionParameter = 20;
  bool has_setfunctionparameter() const;
  void clear_setfunctionparameter();
  static const int kSetFunctionParameterFieldNumber = 20;
  const ::SetFunctionParameter& setfunctionparameter() const;
  ::SetFunctionParameter* mutable_setfunctionparameter();
  ::SetFunctionParameter* release_setfunctionparameter();
  void set_allocated_setfunctionparameter(::SetFunctionParameter* setfunctionparameter);

  // .SetFunctionReturn SetFunctionReturn = 21;
  bool has_setfunctionreturn() const;
  void clear_setfunctionreturn();
  static const int kSetFunctionReturnFieldNumber = 21;
  const ::SetFunctionReturn& setfunctionreturn() const;
  ::SetFunctionReturn* mutable_setfunctionreturn();
  ::SetFunctionReturn* release_setfunctionreturn();
  void set_allocated_setfunctionreturn(::SetFunctionReturn* setfunctionreturn);

  // .SetFunctionEntryPoint SetFunctionEntryPoint = 22;
  bool has_setfunctionentrypoint() const;
  void clear_setfunctionentrypoint();
  static const int kSetFunctionEntryPointFieldNumber = 22;
  const ::SetFunctionEntryPoint& setfunctionentrypoint() const;
  ::SetFunctionEntryPoint* mutable_setfunctionentrypoint();
  ::SetFunctionEntryPoint* release_setfunctionentrypoint();
  void set_allocated_setfunctionentrypoint(::SetFunctionEntryPoint* setfunctionentrypoint);

  // .RemoveFunctionInstruction RemoveFunctionInstruction = 23;
  bool has_removefunctioninstruction() const;
  void clear_removefunctioninstruction();
  static const int kRemoveFunctionInstructionFieldNumber = 23;
  const ::RemoveFunctionInstruction& removefunctioninstruction() const;
  ::RemoveFunctionInstruction* mutable_removefunctioninstruction();
  ::RemoveFunctionInstruction* release_removefunctioninstruction();
  void set_allocated_removefunctioninstruction(::RemoveFunctionInstruction* removefunctioninstruction);

  // .AddInstruction AddInstruction = 24;
  bool has_addinstruction() const;
  void clear_addinstruction();
  static const int kAddInstructionFieldNumber = 24;
  const ::AddInstruction& addinstruction() const;
  ::AddInstruction* mutable_addinstruction();
  ::AddInstruction* release_addinstruction();
  void set_allocated_addinstruction(::AddInstruction* addinstruction);

  // .LinkInstructionExecution LinkInstructionExecution = 25;
  bool has_linkinstructionexecution() const;
  void clear_linkinstructionexecution();
  static const int kLinkInstructionExecutionFieldNumber = 25;
  const ::LinkInstructionExecution& linkinstructionexecution() const;
  ::LinkInstructionExecution* mutable_linkinstructionexecution();
  ::LinkInstructionExecution* release_linkinstructionexecution();
  void set_allocated_linkinstructionexecution(::LinkInstructionExecution* linkinstructionexecution);

  // .LinkInstructionData LinkInstructionData = 26;
  bool has_linkinstructiondata() const;
  void clear_linkinstructiondata();
  static const int kLinkInstructionDataFieldNumber = 26;
  const ::LinkInstructionData& linkinstructiondata() const;
  ::LinkInstructionData* mutable_linkinstructiondata();
  ::LinkInstructionData* release_linkinstructiondata();
  void set_allocated_linkinstructiondata(::LinkInstructionData* linkinstructiondata);

  // .SetInstructionInputValue SetInstructionInputValue = 27;
  bool has_setinstructioninputvalue() const;
  void clear_setinstructioninputvalue();
  static const int kSetInstructionInputValueFieldNumber = 27;
  const ::SetInstructionInputValue& setinstructioninputvalue() const;
  ::SetInstructionInputValue* mutable_setinstructioninputvalue();
  ::SetInstructionInputValue* release_setinstructioninputvalue();
  void set_allocated_setinstructioninputvalue(::SetInstructionInputValue* setinstructioninputvalue);

  // .UnlinkInstructionFlow UnlinkInstructionFlow = 28;
  bool has_unlinkinstructionflow() const;
  void clear_unlinkinstructionflow();
  static const int kUnlinkInstructionFlowFieldNumber = 28;
  const ::UnlinkInstructionFlow& unlinkinstructionflow() const;
  ::UnlinkInstructionFlow* mutable_unlinkinstructionflow();
  ::UnlinkInstructionFlow* release_unlinkinstructionflow();
  void set_allocated_unlinkinstructionflow(::UnlinkInstructionFlow* unlinkinstructionflow);

  // .UnlinkInstructionInput UnlinkInstructionInput = 29;
  bool has_unlinkinstructioninput() const;
  void clear_unlinkinstructioninput();
  static const int kUnlinkInstructionInputFieldNumber = 29;
  const ::UnlinkInstructionInput& unlinkinstructioninput() const;
  ::UnlinkInstructionInput* mutable_unlinkinstructioninput();
  ::UnlinkInstructionInput* release_unlinkinstructioninput();
  void set_allocated_unlinkinstructioninput(::UnlinkInstructionInput* unlinkinstructioninput);

  // @@protoc_insertion_point(class_scope:Default)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Declare* declare_;
  ::Remove* remove_;
  ::Rename* rename_;
  ::Move* move_;
  ::ChangeVisibility* changevisibility_;
  ::SetVariableValue* setvariablevalue_;
  ::SetVariableType* setvariabletype_;
  ::GetVariableValue* getvariablevalue_;
  ::SetContextParent* setcontextparent_;
  ::SetEnumerationType* setenumerationtype_;
  ::SetEnumerationValue* setenumerationvalue_;
  ::GetEnumerationValue* getenumerationvalue_;
  ::RemoveEnumerationValue* removeenumerationvalue_;
  ::AddClassAttribute* addclassattribute_;
  ::RenameClassAttribute* renameclassattribute_;
  ::RemoveClassAttribute* removeclassattribute_;
  ::AddClassMemberFunction* addclassmemberfunction_;
  ::SetListType* setlisttype_;
  ::CallFunction* callfunction_;
  ::SetFunctionParameter* setfunctionparameter_;
  ::SetFunctionReturn* setfunctionreturn_;
  ::SetFunctionEntryPoint* setfunctionentrypoint_;
  ::RemoveFunctionInstruction* removefunctioninstruction_;
  ::AddInstruction* addinstruction_;
  ::LinkInstructionExecution* linkinstructionexecution_;
  ::LinkInstructionData* linkinstructiondata_;
  ::SetInstructionInputValue* setinstructioninputvalue_;
  ::UnlinkInstructionFlow* unlinkinstructionflow_;
  ::UnlinkInstructionInput* unlinkinstructioninput_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetEnumerationValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetEnumerationValue) */ {
 public:
  GetEnumerationValue();
  virtual ~GetEnumerationValue();

  GetEnumerationValue(const GetEnumerationValue& from);

  inline GetEnumerationValue& operator=(const GetEnumerationValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnumerationValue& default_instance();

  static inline const GetEnumerationValue* internal_default_instance() {
    return reinterpret_cast<const GetEnumerationValue*>(
               &_GetEnumerationValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetEnumerationValue* other);

  // implements Message ----------------------------------------------

  inline GetEnumerationValue* New() const PROTOBUF_FINAL { return New(NULL); }

  GetEnumerationValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetEnumerationValue& from);
  void MergeFrom(const GetEnumerationValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetEnumerationValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 EnumId = 2;
  void clear_enumid();
  static const int kEnumIdFieldNumber = 2;
  ::google::protobuf::uint32 enumid() const;
  void set_enumid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GetEnumerationValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 enumid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVariableValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetVariableValue) */ {
 public:
  GetVariableValue();
  virtual ~GetVariableValue();

  GetVariableValue(const GetVariableValue& from);

  inline GetVariableValue& operator=(const GetVariableValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVariableValue& default_instance();

  static inline const GetVariableValue* internal_default_instance() {
    return reinterpret_cast<const GetVariableValue*>(
               &_GetVariableValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetVariableValue* other);

  // implements Message ----------------------------------------------

  inline GetVariableValue* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVariableValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVariableValue& from);
  void MergeFrom(const GetVariableValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVariableValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 VariableId = 1;
  void clear_variableid();
  static const int kVariableIdFieldNumber = 1;
  ::google::protobuf::uint32 variableid() const;
  void set_variableid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GetVariableValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 variableid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinkInstructionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LinkInstructionData) */ {
 public:
  LinkInstructionData();
  virtual ~LinkInstructionData();

  LinkInstructionData(const LinkInstructionData& from);

  inline LinkInstructionData& operator=(const LinkInstructionData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkInstructionData& default_instance();

  static inline const LinkInstructionData* internal_default_instance() {
    return reinterpret_cast<const LinkInstructionData*>(
               &_LinkInstructionData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(LinkInstructionData* other);

  // implements Message ----------------------------------------------

  inline LinkInstructionData* New() const PROTOBUF_FINAL { return New(NULL); }

  LinkInstructionData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LinkInstructionData& from);
  void MergeFrom(const LinkInstructionData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LinkInstructionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string OutputName = 3;
  void clear_outputname();
  static const int kOutputNameFieldNumber = 3;
  const ::std::string& outputname() const;
  void set_outputname(const ::std::string& value);
  #if LANG_CXX11
  void set_outputname(::std::string&& value);
  #endif
  void set_outputname(const char* value);
  void set_outputname(const char* value, size_t size);
  ::std::string* mutable_outputname();
  ::std::string* release_outputname();
  void set_allocated_outputname(::std::string* outputname);

  // string InputName = 5;
  void clear_inputname();
  static const int kInputNameFieldNumber = 5;
  const ::std::string& inputname() const;
  void set_inputname(const ::std::string& value);
  #if LANG_CXX11
  void set_inputname(::std::string&& value);
  #endif
  void set_inputname(const char* value);
  void set_inputname(const char* value, size_t size);
  ::std::string* mutable_inputname();
  ::std::string* release_inputname();
  void set_allocated_inputname(::std::string* inputname);

  // uint32 FunctionID = 1;
  void clear_functionid();
  static const int kFunctionIDFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // uint32 FromId = 2;
  void clear_fromid();
  static const int kFromIdFieldNumber = 2;
  ::google::protobuf::uint32 fromid() const;
  void set_fromid(::google::protobuf::uint32 value);

  // uint32 ToId = 4;
  void clear_toid();
  static const int kToIdFieldNumber = 4;
  ::google::protobuf::uint32 toid() const;
  void set_toid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LinkInstructionData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr outputname_;
  ::google::protobuf::internal::ArenaStringPtr inputname_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 fromid_;
  ::google::protobuf::uint32 toid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinkInstructionExecution : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LinkInstructionExecution) */ {
 public:
  LinkInstructionExecution();
  virtual ~LinkInstructionExecution();

  LinkInstructionExecution(const LinkInstructionExecution& from);

  inline LinkInstructionExecution& operator=(const LinkInstructionExecution& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkInstructionExecution& default_instance();

  static inline const LinkInstructionExecution* internal_default_instance() {
    return reinterpret_cast<const LinkInstructionExecution*>(
               &_LinkInstructionExecution_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(LinkInstructionExecution* other);

  // implements Message ----------------------------------------------

  inline LinkInstructionExecution* New() const PROTOBUF_FINAL { return New(NULL); }

  LinkInstructionExecution* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LinkInstructionExecution& from);
  void MergeFrom(const LinkInstructionExecution& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LinkInstructionExecution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 FunctionID = 1;
  void clear_functionid();
  static const int kFunctionIDFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // uint32 FromId = 2;
  void clear_fromid();
  static const int kFromIdFieldNumber = 2;
  ::google::protobuf::uint32 fromid() const;
  void set_fromid(::google::protobuf::uint32 value);

  // uint32 OutIndex = 3;
  void clear_outindex();
  static const int kOutIndexFieldNumber = 3;
  ::google::protobuf::uint32 outindex() const;
  void set_outindex(::google::protobuf::uint32 value);

  // uint32 ToId = 4;
  void clear_toid();
  static const int kToIdFieldNumber = 4;
  ::google::protobuf::uint32 toid() const;
  void set_toid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LinkInstructionExecution)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 fromid_;
  ::google::protobuf::uint32 outindex_;
  ::google::protobuf::uint32 toid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Move) */ {
 public:
  Move();
  virtual ~Move();

  Move(const Move& from);

  inline Move& operator=(const Move& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Move& default_instance();

  static inline const Move* internal_default_instance() {
    return reinterpret_cast<const Move*>(
               &_Move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Move* other);

  // implements Message ----------------------------------------------

  inline Move* New() const PROTOBUF_FINAL { return New(NULL); }

  Move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Move& from);
  void MergeFrom(const Move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .ENTITY EntityType = 1;
  void clear_entitytype();
  static const int kEntityTypeFieldNumber = 1;
  ::ENTITY entitytype() const;
  void set_entitytype(::ENTITY value);

  // uint32 FromID = 2;
  void clear_fromid();
  static const int kFromIDFieldNumber = 2;
  ::google::protobuf::uint32 fromid() const;
  void set_fromid(::google::protobuf::uint32 value);

  // uint32 ToID = 3;
  void clear_toid();
  static const int kToIDFieldNumber = 3;
  ::google::protobuf::uint32 toid() const;
  void set_toid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int entitytype_;
  ::google::protobuf::uint32 fromid_;
  ::google::protobuf::uint32 toid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Object : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Object) */ {
 public:
  Object();
  virtual ~Object();

  Object(const Object& from);

  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Object& default_instance();

  static inline const Object* internal_default_instance() {
    return reinterpret_cast<const Object*>(
               &_Object_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Object* other);

  // implements Message ----------------------------------------------

  inline Object* New() const PROTOBUF_FINAL { return New(NULL); }

  Object* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Object* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Object)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Remove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Remove) */ {
 public:
  Remove();
  virtual ~Remove();

  Remove(const Remove& from);

  inline Remove& operator=(const Remove& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Remove& default_instance();

  static inline const Remove* internal_default_instance() {
    return reinterpret_cast<const Remove*>(
               &_Remove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Remove* other);

  // implements Message ----------------------------------------------

  inline Remove* New() const PROTOBUF_FINAL { return New(NULL); }

  Remove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Remove& from);
  void MergeFrom(const Remove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Remove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .ENTITY EntityType = 1;
  void clear_entitytype();
  static const int kEntityTypeFieldNumber = 1;
  ::ENTITY entitytype() const;
  void set_entitytype(::ENTITY value);

  // uint32 ContainerID = 2;
  void clear_containerid();
  static const int kContainerIDFieldNumber = 2;
  ::google::protobuf::uint32 containerid() const;
  void set_containerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Remove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int entitytype_;
  ::google::protobuf::uint32 containerid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveClassAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoveClassAttribute) */ {
 public:
  RemoveClassAttribute();
  virtual ~RemoveClassAttribute();

  RemoveClassAttribute(const RemoveClassAttribute& from);

  inline RemoveClassAttribute& operator=(const RemoveClassAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveClassAttribute& default_instance();

  static inline const RemoveClassAttribute* internal_default_instance() {
    return reinterpret_cast<const RemoveClassAttribute*>(
               &_RemoveClassAttribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(RemoveClassAttribute* other);

  // implements Message ----------------------------------------------

  inline RemoveClassAttribute* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveClassAttribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveClassAttribute& from);
  void MergeFrom(const RemoveClassAttribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveClassAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 ClassId = 1;
  void clear_classid();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::uint32 classid() const;
  void set_classid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RemoveClassAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 classid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveEnumerationValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoveEnumerationValue) */ {
 public:
  RemoveEnumerationValue();
  virtual ~RemoveEnumerationValue();

  RemoveEnumerationValue(const RemoveEnumerationValue& from);

  inline RemoveEnumerationValue& operator=(const RemoveEnumerationValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveEnumerationValue& default_instance();

  static inline const RemoveEnumerationValue* internal_default_instance() {
    return reinterpret_cast<const RemoveEnumerationValue*>(
               &_RemoveEnumerationValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(RemoveEnumerationValue* other);

  // implements Message ----------------------------------------------

  inline RemoveEnumerationValue* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveEnumerationValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveEnumerationValue& from);
  void MergeFrom(const RemoveEnumerationValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveEnumerationValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 EnumId = 1;
  void clear_enumid();
  static const int kEnumIdFieldNumber = 1;
  ::google::protobuf::uint32 enumid() const;
  void set_enumid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RemoveEnumerationValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 enumid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveFunctionInstruction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoveFunctionInstruction) */ {
 public:
  RemoveFunctionInstruction();
  virtual ~RemoveFunctionInstruction();

  RemoveFunctionInstruction(const RemoveFunctionInstruction& from);

  inline RemoveFunctionInstruction& operator=(const RemoveFunctionInstruction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveFunctionInstruction& default_instance();

  static inline const RemoveFunctionInstruction* internal_default_instance() {
    return reinterpret_cast<const RemoveFunctionInstruction*>(
               &_RemoveFunctionInstruction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(RemoveFunctionInstruction* other);

  // implements Message ----------------------------------------------

  inline RemoveFunctionInstruction* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveFunctionInstruction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveFunctionInstruction& from);
  void MergeFrom(const RemoveFunctionInstruction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveFunctionInstruction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 FunctionId = 1;
  void clear_functionid();
  static const int kFunctionIdFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // uint32 Instruction = 2;
  void clear_instruction();
  static const int kInstructionFieldNumber = 2;
  ::google::protobuf::uint32 instruction() const;
  void set_instruction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RemoveFunctionInstruction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 instruction_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Rename : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Rename) */ {
 public:
  Rename();
  virtual ~Rename();

  Rename(const Rename& from);

  inline Rename& operator=(const Rename& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rename& default_instance();

  static inline const Rename* internal_default_instance() {
    return reinterpret_cast<const Rename*>(
               &_Rename_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(Rename* other);

  // implements Message ----------------------------------------------

  inline Rename* New() const PROTOBUF_FINAL { return New(NULL); }

  Rename* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Rename& from);
  void MergeFrom(const Rename& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Rename* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string LastName = 3;
  void clear_lastname();
  static const int kLastNameFieldNumber = 3;
  const ::std::string& lastname() const;
  void set_lastname(const ::std::string& value);
  #if LANG_CXX11
  void set_lastname(::std::string&& value);
  #endif
  void set_lastname(const char* value);
  void set_lastname(const char* value, size_t size);
  ::std::string* mutable_lastname();
  ::std::string* release_lastname();
  void set_allocated_lastname(::std::string* lastname);

  // string NewName = 4;
  void clear_newname();
  static const int kNewNameFieldNumber = 4;
  const ::std::string& newname() const;
  void set_newname(const ::std::string& value);
  #if LANG_CXX11
  void set_newname(::std::string&& value);
  #endif
  void set_newname(const char* value);
  void set_newname(const char* value, size_t size);
  ::std::string* mutable_newname();
  ::std::string* release_newname();
  void set_allocated_newname(::std::string* newname);

  // .ENTITY EntityType = 1;
  void clear_entitytype();
  static const int kEntityTypeFieldNumber = 1;
  ::ENTITY entitytype() const;
  void set_entitytype(::ENTITY value);

  // uint32 ContainerID = 2;
  void clear_containerid();
  static const int kContainerIDFieldNumber = 2;
  ::google::protobuf::uint32 containerid() const;
  void set_containerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Rename)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lastname_;
  ::google::protobuf::internal::ArenaStringPtr newname_;
  int entitytype_;
  ::google::protobuf::uint32 containerid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RenameClassAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RenameClassAttribute) */ {
 public:
  RenameClassAttribute();
  virtual ~RenameClassAttribute();

  RenameClassAttribute(const RenameClassAttribute& from);

  inline RenameClassAttribute& operator=(const RenameClassAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameClassAttribute& default_instance();

  static inline const RenameClassAttribute* internal_default_instance() {
    return reinterpret_cast<const RenameClassAttribute*>(
               &_RenameClassAttribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(RenameClassAttribute* other);

  // implements Message ----------------------------------------------

  inline RenameClassAttribute* New() const PROTOBUF_FINAL { return New(NULL); }

  RenameClassAttribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RenameClassAttribute& from);
  void MergeFrom(const RenameClassAttribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RenameClassAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string LastName = 2;
  void clear_lastname();
  static const int kLastNameFieldNumber = 2;
  const ::std::string& lastname() const;
  void set_lastname(const ::std::string& value);
  #if LANG_CXX11
  void set_lastname(::std::string&& value);
  #endif
  void set_lastname(const char* value);
  void set_lastname(const char* value, size_t size);
  ::std::string* mutable_lastname();
  ::std::string* release_lastname();
  void set_allocated_lastname(::std::string* lastname);

  // string NewName = 3;
  void clear_newname();
  static const int kNewNameFieldNumber = 3;
  const ::std::string& newname() const;
  void set_newname(const ::std::string& value);
  #if LANG_CXX11
  void set_newname(::std::string&& value);
  #endif
  void set_newname(const char* value);
  void set_newname(const char* value, size_t size);
  ::std::string* mutable_newname();
  ::std::string* release_newname();
  void set_allocated_newname(::std::string* newname);

  // uint32 ClassId = 1;
  void clear_classid();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::uint32 classid() const;
  void set_classid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RenameClassAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lastname_;
  ::google::protobuf::internal::ArenaStringPtr newname_;
  ::google::protobuf::uint32 classid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetContextParent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetContextParent) */ {
 public:
  SetContextParent();
  virtual ~SetContextParent();

  SetContextParent(const SetContextParent& from);

  inline SetContextParent& operator=(const SetContextParent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetContextParent& default_instance();

  static inline const SetContextParent* internal_default_instance() {
    return reinterpret_cast<const SetContextParent*>(
               &_SetContextParent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SetContextParent* other);

  // implements Message ----------------------------------------------

  inline SetContextParent* New() const PROTOBUF_FINAL { return New(NULL); }

  SetContextParent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetContextParent& from);
  void MergeFrom(const SetContextParent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetContextParent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ContextId = 1;
  void clear_contextid();
  static const int kContextIdFieldNumber = 1;
  ::google::protobuf::uint32 contextid() const;
  void set_contextid(::google::protobuf::uint32 value);

  // uint32 ParentId = 2;
  void clear_parentid();
  static const int kParentIdFieldNumber = 2;
  ::google::protobuf::uint32 parentid() const;
  void set_parentid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetContextParent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 contextid_;
  ::google::protobuf::uint32 parentid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetEnumerationType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetEnumerationType) */ {
 public:
  SetEnumerationType();
  virtual ~SetEnumerationType();

  SetEnumerationType(const SetEnumerationType& from);

  inline SetEnumerationType& operator=(const SetEnumerationType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetEnumerationType& default_instance();

  static inline const SetEnumerationType* internal_default_instance() {
    return reinterpret_cast<const SetEnumerationType*>(
               &_SetEnumerationType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SetEnumerationType* other);

  // implements Message ----------------------------------------------

  inline SetEnumerationType* New() const PROTOBUF_FINAL { return New(NULL); }

  SetEnumerationType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetEnumerationType& from);
  void MergeFrom(const SetEnumerationType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetEnumerationType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 EnumId = 1;
  void clear_enumid();
  static const int kEnumIdFieldNumber = 1;
  ::google::protobuf::uint32 enumid() const;
  void set_enumid(::google::protobuf::uint32 value);

  // uint32 TypeId = 2;
  void clear_typeid_();
  static const int kTypeIdFieldNumber = 2;
  ::google::protobuf::uint32 typeid_() const;
  void set_typeid_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetEnumerationType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enumid_;
  ::google::protobuf::uint32 typeid__;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetEnumerationValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetEnumerationValue) */ {
 public:
  SetEnumerationValue();
  virtual ~SetEnumerationValue();

  SetEnumerationValue(const SetEnumerationValue& from);

  inline SetEnumerationValue& operator=(const SetEnumerationValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetEnumerationValue& default_instance();

  static inline const SetEnumerationValue* internal_default_instance() {
    return reinterpret_cast<const SetEnumerationValue*>(
               &_SetEnumerationValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SetEnumerationValue* other);

  // implements Message ----------------------------------------------

  inline SetEnumerationValue* New() const PROTOBUF_FINAL { return New(NULL); }

  SetEnumerationValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetEnumerationValue& from);
  void MergeFrom(const SetEnumerationValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetEnumerationValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .Object Value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::Object& value() const;
  ::Object* mutable_value();
  ::Object* release_value();
  void set_allocated_value(::Object* value);

  // uint32 EnumId = 1;
  void clear_enumid();
  static const int kEnumIdFieldNumber = 1;
  ::google::protobuf::uint32 enumid() const;
  void set_enumid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetEnumerationValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::Object* value_;
  ::google::protobuf::uint32 enumid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFunctionEntryPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetFunctionEntryPoint) */ {
 public:
  SetFunctionEntryPoint();
  virtual ~SetFunctionEntryPoint();

  SetFunctionEntryPoint(const SetFunctionEntryPoint& from);

  inline SetFunctionEntryPoint& operator=(const SetFunctionEntryPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFunctionEntryPoint& default_instance();

  static inline const SetFunctionEntryPoint* internal_default_instance() {
    return reinterpret_cast<const SetFunctionEntryPoint*>(
               &_SetFunctionEntryPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SetFunctionEntryPoint* other);

  // implements Message ----------------------------------------------

  inline SetFunctionEntryPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  SetFunctionEntryPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetFunctionEntryPoint& from);
  void MergeFrom(const SetFunctionEntryPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetFunctionEntryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 FunctionId = 1;
  void clear_functionid();
  static const int kFunctionIdFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // uint32 Instruction = 2;
  void clear_instruction();
  static const int kInstructionFieldNumber = 2;
  ::google::protobuf::uint32 instruction() const;
  void set_instruction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetFunctionEntryPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 instruction_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFunctionParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetFunctionParameter) */ {
 public:
  SetFunctionParameter();
  virtual ~SetFunctionParameter();

  SetFunctionParameter(const SetFunctionParameter& from);

  inline SetFunctionParameter& operator=(const SetFunctionParameter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFunctionParameter& default_instance();

  static inline const SetFunctionParameter* internal_default_instance() {
    return reinterpret_cast<const SetFunctionParameter*>(
               &_SetFunctionParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SetFunctionParameter* other);

  // implements Message ----------------------------------------------

  inline SetFunctionParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  SetFunctionParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetFunctionParameter& from);
  void MergeFrom(const SetFunctionParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetFunctionParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ExternalVarName = 2;
  void clear_externalvarname();
  static const int kExternalVarNameFieldNumber = 2;
  const ::std::string& externalvarname() const;
  void set_externalvarname(const ::std::string& value);
  #if LANG_CXX11
  void set_externalvarname(::std::string&& value);
  #endif
  void set_externalvarname(const char* value);
  void set_externalvarname(const char* value, size_t size);
  ::std::string* mutable_externalvarname();
  ::std::string* release_externalvarname();
  void set_allocated_externalvarname(::std::string* externalvarname);

  // uint32 FuncId = 1;
  void clear_funcid();
  static const int kFuncIdFieldNumber = 1;
  ::google::protobuf::uint32 funcid() const;
  void set_funcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetFunctionParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr externalvarname_;
  ::google::protobuf::uint32 funcid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFunctionReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetFunctionReturn) */ {
 public:
  SetFunctionReturn();
  virtual ~SetFunctionReturn();

  SetFunctionReturn(const SetFunctionReturn& from);

  inline SetFunctionReturn& operator=(const SetFunctionReturn& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFunctionReturn& default_instance();

  static inline const SetFunctionReturn* internal_default_instance() {
    return reinterpret_cast<const SetFunctionReturn*>(
               &_SetFunctionReturn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(SetFunctionReturn* other);

  // implements Message ----------------------------------------------

  inline SetFunctionReturn* New() const PROTOBUF_FINAL { return New(NULL); }

  SetFunctionReturn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetFunctionReturn& from);
  void MergeFrom(const SetFunctionReturn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetFunctionReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ExternalVarName = 2;
  void clear_externalvarname();
  static const int kExternalVarNameFieldNumber = 2;
  const ::std::string& externalvarname() const;
  void set_externalvarname(const ::std::string& value);
  #if LANG_CXX11
  void set_externalvarname(::std::string&& value);
  #endif
  void set_externalvarname(const char* value);
  void set_externalvarname(const char* value, size_t size);
  ::std::string* mutable_externalvarname();
  ::std::string* release_externalvarname();
  void set_allocated_externalvarname(::std::string* externalvarname);

  // uint32 FuncId = 1;
  void clear_funcid();
  static const int kFuncIdFieldNumber = 1;
  ::google::protobuf::uint32 funcid() const;
  void set_funcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetFunctionReturn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr externalvarname_;
  ::google::protobuf::uint32 funcid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetInstructionInputValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetInstructionInputValue) */ {
 public:
  SetInstructionInputValue();
  virtual ~SetInstructionInputValue();

  SetInstructionInputValue(const SetInstructionInputValue& from);

  inline SetInstructionInputValue& operator=(const SetInstructionInputValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetInstructionInputValue& default_instance();

  static inline const SetInstructionInputValue* internal_default_instance() {
    return reinterpret_cast<const SetInstructionInputValue*>(
               &_SetInstructionInputValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SetInstructionInputValue* other);

  // implements Message ----------------------------------------------

  inline SetInstructionInputValue* New() const PROTOBUF_FINAL { return New(NULL); }

  SetInstructionInputValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetInstructionInputValue& from);
  void MergeFrom(const SetInstructionInputValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetInstructionInputValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string InputName = 3;
  void clear_inputname();
  static const int kInputNameFieldNumber = 3;
  const ::std::string& inputname() const;
  void set_inputname(const ::std::string& value);
  #if LANG_CXX11
  void set_inputname(::std::string&& value);
  #endif
  void set_inputname(const char* value);
  void set_inputname(const char* value, size_t size);
  ::std::string* mutable_inputname();
  ::std::string* release_inputname();
  void set_allocated_inputname(::std::string* inputname);

  // .Object InputValue = 4;
  bool has_inputvalue() const;
  void clear_inputvalue();
  static const int kInputValueFieldNumber = 4;
  const ::Object& inputvalue() const;
  ::Object* mutable_inputvalue();
  ::Object* release_inputvalue();
  void set_allocated_inputvalue(::Object* inputvalue);

  // uint32 FunctionID = 1;
  void clear_functionid();
  static const int kFunctionIDFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // uint32 Instruction = 2;
  void clear_instruction();
  static const int kInstructionFieldNumber = 2;
  ::google::protobuf::uint32 instruction() const;
  void set_instruction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetInstructionInputValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr inputname_;
  ::Object* inputvalue_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 instruction_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetListType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetListType) */ {
 public:
  SetListType();
  virtual ~SetListType();

  SetListType(const SetListType& from);

  inline SetListType& operator=(const SetListType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetListType& default_instance();

  static inline const SetListType* internal_default_instance() {
    return reinterpret_cast<const SetListType*>(
               &_SetListType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SetListType* other);

  // implements Message ----------------------------------------------

  inline SetListType* New() const PROTOBUF_FINAL { return New(NULL); }

  SetListType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetListType& from);
  void MergeFrom(const SetListType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetListType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ListId = 1;
  void clear_listid();
  static const int kListIdFieldNumber = 1;
  ::google::protobuf::uint32 listid() const;
  void set_listid(::google::protobuf::uint32 value);

  // uint32 TypeId = 2;
  void clear_typeid_();
  static const int kTypeIdFieldNumber = 2;
  ::google::protobuf::uint32 typeid_() const;
  void set_typeid_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetListType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 listid_;
  ::google::protobuf::uint32 typeid__;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetVariableType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetVariableType) */ {
 public:
  SetVariableType();
  virtual ~SetVariableType();

  SetVariableType(const SetVariableType& from);

  inline SetVariableType& operator=(const SetVariableType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetVariableType& default_instance();

  static inline const SetVariableType* internal_default_instance() {
    return reinterpret_cast<const SetVariableType*>(
               &_SetVariableType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SetVariableType* other);

  // implements Message ----------------------------------------------

  inline SetVariableType* New() const PROTOBUF_FINAL { return New(NULL); }

  SetVariableType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetVariableType& from);
  void MergeFrom(const SetVariableType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetVariableType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 VariableID = 1;
  void clear_variableid();
  static const int kVariableIDFieldNumber = 1;
  ::google::protobuf::uint32 variableid() const;
  void set_variableid(::google::protobuf::uint32 value);

  // uint32 TypeID = 2;
  void clear_typeid_();
  static const int kTypeIDFieldNumber = 2;
  ::google::protobuf::uint32 typeid_() const;
  void set_typeid_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetVariableType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 variableid_;
  ::google::protobuf::uint32 typeid__;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetVariableValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetVariableValue) */ {
 public:
  SetVariableValue();
  virtual ~SetVariableValue();

  SetVariableValue(const SetVariableValue& from);

  inline SetVariableValue& operator=(const SetVariableValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetVariableValue& default_instance();

  static inline const SetVariableValue* internal_default_instance() {
    return reinterpret_cast<const SetVariableValue*>(
               &_SetVariableValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(SetVariableValue* other);

  // implements Message ----------------------------------------------

  inline SetVariableValue* New() const PROTOBUF_FINAL { return New(NULL); }

  SetVariableValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetVariableValue& from);
  void MergeFrom(const SetVariableValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetVariableValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint32 VariableID = 1;
  void clear_variableid();
  static const int kVariableIDFieldNumber = 1;
  ::google::protobuf::uint32 variableid() const;
  void set_variableid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SetVariableValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 variableid_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlinkInstructionFlow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UnlinkInstructionFlow) */ {
 public:
  UnlinkInstructionFlow();
  virtual ~UnlinkInstructionFlow();

  UnlinkInstructionFlow(const UnlinkInstructionFlow& from);

  inline UnlinkInstructionFlow& operator=(const UnlinkInstructionFlow& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlinkInstructionFlow& default_instance();

  static inline const UnlinkInstructionFlow* internal_default_instance() {
    return reinterpret_cast<const UnlinkInstructionFlow*>(
               &_UnlinkInstructionFlow_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(UnlinkInstructionFlow* other);

  // implements Message ----------------------------------------------

  inline UnlinkInstructionFlow* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlinkInstructionFlow* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlinkInstructionFlow& from);
  void MergeFrom(const UnlinkInstructionFlow& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlinkInstructionFlow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 FunctionID = 1;
  void clear_functionid();
  static const int kFunctionIDFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // uint32 Instruction = 2;
  void clear_instruction();
  static const int kInstructionFieldNumber = 2;
  ::google::protobuf::uint32 instruction() const;
  void set_instruction(::google::protobuf::uint32 value);

  // uint32 OutIndex = 3;
  void clear_outindex();
  static const int kOutIndexFieldNumber = 3;
  ::google::protobuf::uint32 outindex() const;
  void set_outindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UnlinkInstructionFlow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 instruction_;
  ::google::protobuf::uint32 outindex_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlinkInstructionInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UnlinkInstructionInput) */ {
 public:
  UnlinkInstructionInput();
  virtual ~UnlinkInstructionInput();

  UnlinkInstructionInput(const UnlinkInstructionInput& from);

  inline UnlinkInstructionInput& operator=(const UnlinkInstructionInput& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlinkInstructionInput& default_instance();

  static inline const UnlinkInstructionInput* internal_default_instance() {
    return reinterpret_cast<const UnlinkInstructionInput*>(
               &_UnlinkInstructionInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(UnlinkInstructionInput* other);

  // implements Message ----------------------------------------------

  inline UnlinkInstructionInput* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlinkInstructionInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlinkInstructionInput& from);
  void MergeFrom(const UnlinkInstructionInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlinkInstructionInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string InputName = 3;
  void clear_inputname();
  static const int kInputNameFieldNumber = 3;
  const ::std::string& inputname() const;
  void set_inputname(const ::std::string& value);
  #if LANG_CXX11
  void set_inputname(::std::string&& value);
  #endif
  void set_inputname(const char* value);
  void set_inputname(const char* value, size_t size);
  ::std::string* mutable_inputname();
  ::std::string* release_inputname();
  void set_allocated_inputname(::std::string* inputname);

  // uint32 FunctionID = 1;
  void clear_functionid();
  static const int kFunctionIDFieldNumber = 1;
  ::google::protobuf::uint32 functionid() const;
  void set_functionid(::google::protobuf::uint32 value);

  // uint32 Instruction = 2;
  void clear_instruction();
  static const int kInstructionFieldNumber = 2;
  ::google::protobuf::uint32 instruction() const;
  void set_instruction(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UnlinkInstructionInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr inputname_;
  ::google::protobuf::uint32 functionid_;
  ::google::protobuf::uint32 instruction_;
  mutable int _cached_size_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AddClassAttribute

// uint32 ClassId = 1;
inline void AddClassAttribute::clear_classid() {
  classid_ = 0u;
}
inline ::google::protobuf::uint32 AddClassAttribute::classid() const {
  // @@protoc_insertion_point(field_get:AddClassAttribute.ClassId)
  return classid_;
}
inline void AddClassAttribute::set_classid(::google::protobuf::uint32 value) {
  
  classid_ = value;
  // @@protoc_insertion_point(field_set:AddClassAttribute.ClassId)
}

// string Name = 2;
inline void AddClassAttribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddClassAttribute::name() const {
  // @@protoc_insertion_point(field_get:AddClassAttribute.Name)
  return name_.GetNoArena();
}
inline void AddClassAttribute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AddClassAttribute.Name)
}
#if LANG_CXX11
inline void AddClassAttribute::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AddClassAttribute.Name)
}
#endif
inline void AddClassAttribute::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AddClassAttribute.Name)
}
inline void AddClassAttribute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AddClassAttribute.Name)
}
inline ::std::string* AddClassAttribute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:AddClassAttribute.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddClassAttribute::release_name() {
  // @@protoc_insertion_point(field_release:AddClassAttribute.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddClassAttribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:AddClassAttribute.Name)
}

// uint32 TypeId = 3;
inline void AddClassAttribute::clear_typeid_() {
  typeid__ = 0u;
}
inline ::google::protobuf::uint32 AddClassAttribute::typeid_() const {
  // @@protoc_insertion_point(field_get:AddClassAttribute.TypeId)
  return typeid__;
}
inline void AddClassAttribute::set_typeid_(::google::protobuf::uint32 value) {
  
  typeid__ = value;
  // @@protoc_insertion_point(field_set:AddClassAttribute.TypeId)
}

// .VISIBILITY Visibility = 4;
inline void AddClassAttribute::clear_visibility() {
  visibility_ = 0;
}
inline ::VISIBILITY AddClassAttribute::visibility() const {
  // @@protoc_insertion_point(field_get:AddClassAttribute.Visibility)
  return static_cast< ::VISIBILITY >(visibility_);
}
inline void AddClassAttribute::set_visibility(::VISIBILITY value) {
  
  visibility_ = value;
  // @@protoc_insertion_point(field_set:AddClassAttribute.Visibility)
}

// -------------------------------------------------------------------

// AddClassMemberFunction

// uint32 ClassId = 1;
inline void AddClassMemberFunction::clear_classid() {
  classid_ = 0u;
}
inline ::google::protobuf::uint32 AddClassMemberFunction::classid() const {
  // @@protoc_insertion_point(field_get:AddClassMemberFunction.ClassId)
  return classid_;
}
inline void AddClassMemberFunction::set_classid(::google::protobuf::uint32 value) {
  
  classid_ = value;
  // @@protoc_insertion_point(field_set:AddClassMemberFunction.ClassId)
}

// string Name = 2;
inline void AddClassMemberFunction::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddClassMemberFunction::name() const {
  // @@protoc_insertion_point(field_get:AddClassMemberFunction.Name)
  return name_.GetNoArena();
}
inline void AddClassMemberFunction::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AddClassMemberFunction.Name)
}
#if LANG_CXX11
inline void AddClassMemberFunction::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AddClassMemberFunction.Name)
}
#endif
inline void AddClassMemberFunction::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AddClassMemberFunction.Name)
}
inline void AddClassMemberFunction::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AddClassMemberFunction.Name)
}
inline ::std::string* AddClassMemberFunction::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:AddClassMemberFunction.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddClassMemberFunction::release_name() {
  // @@protoc_insertion_point(field_release:AddClassMemberFunction.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddClassMemberFunction::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:AddClassMemberFunction.Name)
}

// .VISIBILITY Visibility = 3;
inline void AddClassMemberFunction::clear_visibility() {
  visibility_ = 0;
}
inline ::VISIBILITY AddClassMemberFunction::visibility() const {
  // @@protoc_insertion_point(field_get:AddClassMemberFunction.Visibility)
  return static_cast< ::VISIBILITY >(visibility_);
}
inline void AddClassMemberFunction::set_visibility(::VISIBILITY value) {
  
  visibility_ = value;
  // @@protoc_insertion_point(field_set:AddClassMemberFunction.Visibility)
}

// -------------------------------------------------------------------

// AddInstruction

// uint32 FunctionID = 1;
inline void AddInstruction::clear_functionid() {
  functionid_ = 0u;
}
inline ::google::protobuf::uint32 AddInstruction::functionid() const {
  // @@protoc_insertion_point(field_get:AddInstruction.FunctionID)
  return functionid_;
}
inline void AddInstruction::set_functionid(::google::protobuf::uint32 value) {
  
  functionid_ = value;
  // @@protoc_insertion_point(field_set:AddInstruction.FunctionID)
}

// .INSTRUCTION_ID ToCreate = 2;
inline void AddInstruction::clear_tocreate() {
  tocreate_ = 0;
}
inline ::INSTRUCTION_ID AddInstruction::tocreate() const {
  // @@protoc_insertion_point(field_get:AddInstruction.ToCreate)
  return static_cast< ::INSTRUCTION_ID >(tocreate_);
}
inline void AddInstruction::set_tocreate(::INSTRUCTION_ID value) {
  
  tocreate_ = value;
  // @@protoc_insertion_point(field_set:AddInstruction.ToCreate)
}

// repeated uint32 Arguments = 3 [packed = false];
inline int AddInstruction::arguments_size() const {
  return arguments_.size();
}
inline void AddInstruction::clear_arguments() {
  arguments_.Clear();
}
inline ::google::protobuf::uint32 AddInstruction::arguments(int index) const {
  // @@protoc_insertion_point(field_get:AddInstruction.Arguments)
  return arguments_.Get(index);
}
inline void AddInstruction::set_arguments(int index, ::google::protobuf::uint32 value) {
  arguments_.Set(index, value);
  // @@protoc_insertion_point(field_set:AddInstruction.Arguments)
}
inline void AddInstruction::add_arguments(::google::protobuf::uint32 value) {
  arguments_.Add(value);
  // @@protoc_insertion_point(field_add:AddInstruction.Arguments)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddInstruction::arguments() const {
  // @@protoc_insertion_point(field_list:AddInstruction.Arguments)
  return arguments_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddInstruction::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:AddInstruction.Arguments)
  return &arguments_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CallFunction

// uint32 FuncId = 1;
inline void CallFunction::clear_funcid() {
  funcid_ = 0u;
}
inline ::google::protobuf::uint32 CallFunction::funcid() const {
  // @@protoc_insertion_point(field_get:CallFunction.FuncId)
  return funcid_;
}
inline void CallFunction::set_funcid(::google::protobuf::uint32 value) {
  
  funcid_ = value;
  // @@protoc_insertion_point(field_set:CallFunction.FuncId)
}

// map<string, .Object> Parameters = 2;
inline int CallFunction::parameters_size() const {
  return parameters_.size();
}
inline void CallFunction::clear_parameters() {
  parameters_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::Object >&
CallFunction::parameters() const {
  // @@protoc_insertion_point(field_map:CallFunction.Parameters)
  return parameters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::Object >*
CallFunction::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:CallFunction.Parameters)
  return parameters_.MutableMap();
}

// -------------------------------------------------------------------

// ChangeVisibility

// .ENTITY EntityType = 1;
inline void ChangeVisibility::clear_entitytype() {
  entitytype_ = 0;
}
inline ::ENTITY ChangeVisibility::entitytype() const {
  // @@protoc_insertion_point(field_get:ChangeVisibility.EntityType)
  return static_cast< ::ENTITY >(entitytype_);
}
inline void ChangeVisibility::set_entitytype(::ENTITY value) {
  
  entitytype_ = value;
  // @@protoc_insertion_point(field_set:ChangeVisibility.EntityType)
}

// uint32 ContainerID = 2;
inline void ChangeVisibility::clear_containerid() {
  containerid_ = 0u;
}
inline ::google::protobuf::uint32 ChangeVisibility::containerid() const {
  // @@protoc_insertion_point(field_get:ChangeVisibility.ContainerID)
  return containerid_;
}
inline void ChangeVisibility::set_containerid(::google::protobuf::uint32 value) {
  
  containerid_ = value;
  // @@protoc_insertion_point(field_set:ChangeVisibility.ContainerID)
}

// string Name = 3;
inline void ChangeVisibility::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeVisibility::name() const {
  // @@protoc_insertion_point(field_get:ChangeVisibility.Name)
  return name_.GetNoArena();
}
inline void ChangeVisibility::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChangeVisibility.Name)
}
#if LANG_CXX11
inline void ChangeVisibility::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChangeVisibility.Name)
}
#endif
inline void ChangeVisibility::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChangeVisibility.Name)
}
inline void ChangeVisibility::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChangeVisibility.Name)
}
inline ::std::string* ChangeVisibility::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ChangeVisibility.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeVisibility::release_name() {
  // @@protoc_insertion_point(field_release:ChangeVisibility.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeVisibility::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ChangeVisibility.Name)
}

// .VISIBILITY NewVisi = 4;
inline void ChangeVisibility::clear_newvisi() {
  newvisi_ = 0;
}
inline ::VISIBILITY ChangeVisibility::newvisi() const {
  // @@protoc_insertion_point(field_get:ChangeVisibility.NewVisi)
  return static_cast< ::VISIBILITY >(newvisi_);
}
inline void ChangeVisibility::set_newvisi(::VISIBILITY value) {
  
  newvisi_ = value;
  // @@protoc_insertion_point(field_set:ChangeVisibility.NewVisi)
}

// -------------------------------------------------------------------

// Declare

// .ENTITY EntityType = 1;
inline void Declare::clear_entitytype() {
  entitytype_ = 0;
}
inline ::ENTITY Declare::entitytype() const {
  // @@protoc_insertion_point(field_get:Declare.EntityType)
  return static_cast< ::ENTITY >(entitytype_);
}
inline void Declare::set_entitytype(::ENTITY value) {
  
  entitytype_ = value;
  // @@protoc_insertion_point(field_set:Declare.EntityType)
}

// uint32 ContainerID = 2;
inline void Declare::clear_containerid() {
  containerid_ = 0u;
}
inline ::google::protobuf::uint32 Declare::containerid() const {
  // @@protoc_insertion_point(field_get:Declare.ContainerID)
  return containerid_;
}
inline void Declare::set_containerid(::google::protobuf::uint32 value) {
  
  containerid_ = value;
  // @@protoc_insertion_point(field_set:Declare.ContainerID)
}

// string Name = 3;
inline void Declare::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Declare::name() const {
  // @@protoc_insertion_point(field_get:Declare.Name)
  return name_.GetNoArena();
}
inline void Declare::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Declare.Name)
}
#if LANG_CXX11
inline void Declare::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Declare.Name)
}
#endif
inline void Declare::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Declare.Name)
}
inline void Declare::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Declare.Name)
}
inline ::std::string* Declare::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Declare.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Declare::release_name() {
  // @@protoc_insertion_point(field_release:Declare.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Declare::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Declare.Name)
}

// .VISIBILITY Visibility = 4;
inline void Declare::clear_visibility() {
  visibility_ = 0;
}
inline ::VISIBILITY Declare::visibility() const {
  // @@protoc_insertion_point(field_get:Declare.Visibility)
  return static_cast< ::VISIBILITY >(visibility_);
}
inline void Declare::set_visibility(::VISIBILITY value) {
  
  visibility_ = value;
  // @@protoc_insertion_point(field_set:Declare.Visibility)
}

// -------------------------------------------------------------------

// Default

// .Declare Declare = 1;
inline bool Default::has_declare() const {
  return this != internal_default_instance() && declare_ != NULL;
}
inline void Default::clear_declare() {
  if (GetArenaNoVirtual() == NULL && declare_ != NULL) delete declare_;
  declare_ = NULL;
}
inline const ::Declare& Default::declare() const {
  // @@protoc_insertion_point(field_get:Default.Declare)
  return declare_ != NULL ? *declare_
                         : *::Declare::internal_default_instance();
}
inline ::Declare* Default::mutable_declare() {
  
  if (declare_ == NULL) {
    declare_ = new ::Declare;
  }
  // @@protoc_insertion_point(field_mutable:Default.Declare)
  return declare_;
}
inline ::Declare* Default::release_declare() {
  // @@protoc_insertion_point(field_release:Default.Declare)
  
  ::Declare* temp = declare_;
  declare_ = NULL;
  return temp;
}
inline void Default::set_allocated_declare(::Declare* declare) {
  delete declare_;
  declare_ = declare;
  if (declare) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.Declare)
}

// .Remove Remove = 2;
inline bool Default::has_remove() const {
  return this != internal_default_instance() && remove_ != NULL;
}
inline void Default::clear_remove() {
  if (GetArenaNoVirtual() == NULL && remove_ != NULL) delete remove_;
  remove_ = NULL;
}
inline const ::Remove& Default::remove() const {
  // @@protoc_insertion_point(field_get:Default.Remove)
  return remove_ != NULL ? *remove_
                         : *::Remove::internal_default_instance();
}
inline ::Remove* Default::mutable_remove() {
  
  if (remove_ == NULL) {
    remove_ = new ::Remove;
  }
  // @@protoc_insertion_point(field_mutable:Default.Remove)
  return remove_;
}
inline ::Remove* Default::release_remove() {
  // @@protoc_insertion_point(field_release:Default.Remove)
  
  ::Remove* temp = remove_;
  remove_ = NULL;
  return temp;
}
inline void Default::set_allocated_remove(::Remove* remove) {
  delete remove_;
  remove_ = remove;
  if (remove) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.Remove)
}

// .Rename Rename = 3;
inline bool Default::has_rename() const {
  return this != internal_default_instance() && rename_ != NULL;
}
inline void Default::clear_rename() {
  if (GetArenaNoVirtual() == NULL && rename_ != NULL) delete rename_;
  rename_ = NULL;
}
inline const ::Rename& Default::rename() const {
  // @@protoc_insertion_point(field_get:Default.Rename)
  return rename_ != NULL ? *rename_
                         : *::Rename::internal_default_instance();
}
inline ::Rename* Default::mutable_rename() {
  
  if (rename_ == NULL) {
    rename_ = new ::Rename;
  }
  // @@protoc_insertion_point(field_mutable:Default.Rename)
  return rename_;
}
inline ::Rename* Default::release_rename() {
  // @@protoc_insertion_point(field_release:Default.Rename)
  
  ::Rename* temp = rename_;
  rename_ = NULL;
  return temp;
}
inline void Default::set_allocated_rename(::Rename* rename) {
  delete rename_;
  rename_ = rename;
  if (rename) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.Rename)
}

// .Move Move = 4;
inline bool Default::has_move() const {
  return this != internal_default_instance() && move_ != NULL;
}
inline void Default::clear_move() {
  if (GetArenaNoVirtual() == NULL && move_ != NULL) delete move_;
  move_ = NULL;
}
inline const ::Move& Default::move() const {
  // @@protoc_insertion_point(field_get:Default.Move)
  return move_ != NULL ? *move_
                         : *::Move::internal_default_instance();
}
inline ::Move* Default::mutable_move() {
  
  if (move_ == NULL) {
    move_ = new ::Move;
  }
  // @@protoc_insertion_point(field_mutable:Default.Move)
  return move_;
}
inline ::Move* Default::release_move() {
  // @@protoc_insertion_point(field_release:Default.Move)
  
  ::Move* temp = move_;
  move_ = NULL;
  return temp;
}
inline void Default::set_allocated_move(::Move* move) {
  delete move_;
  move_ = move;
  if (move) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.Move)
}

// .ChangeVisibility ChangeVisibility = 5;
inline bool Default::has_changevisibility() const {
  return this != internal_default_instance() && changevisibility_ != NULL;
}
inline void Default::clear_changevisibility() {
  if (GetArenaNoVirtual() == NULL && changevisibility_ != NULL) delete changevisibility_;
  changevisibility_ = NULL;
}
inline const ::ChangeVisibility& Default::changevisibility() const {
  // @@protoc_insertion_point(field_get:Default.ChangeVisibility)
  return changevisibility_ != NULL ? *changevisibility_
                         : *::ChangeVisibility::internal_default_instance();
}
inline ::ChangeVisibility* Default::mutable_changevisibility() {
  
  if (changevisibility_ == NULL) {
    changevisibility_ = new ::ChangeVisibility;
  }
  // @@protoc_insertion_point(field_mutable:Default.ChangeVisibility)
  return changevisibility_;
}
inline ::ChangeVisibility* Default::release_changevisibility() {
  // @@protoc_insertion_point(field_release:Default.ChangeVisibility)
  
  ::ChangeVisibility* temp = changevisibility_;
  changevisibility_ = NULL;
  return temp;
}
inline void Default::set_allocated_changevisibility(::ChangeVisibility* changevisibility) {
  delete changevisibility_;
  changevisibility_ = changevisibility;
  if (changevisibility) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.ChangeVisibility)
}

// .SetVariableValue SetVariableValue = 6;
inline bool Default::has_setvariablevalue() const {
  return this != internal_default_instance() && setvariablevalue_ != NULL;
}
inline void Default::clear_setvariablevalue() {
  if (GetArenaNoVirtual() == NULL && setvariablevalue_ != NULL) delete setvariablevalue_;
  setvariablevalue_ = NULL;
}
inline const ::SetVariableValue& Default::setvariablevalue() const {
  // @@protoc_insertion_point(field_get:Default.SetVariableValue)
  return setvariablevalue_ != NULL ? *setvariablevalue_
                         : *::SetVariableValue::internal_default_instance();
}
inline ::SetVariableValue* Default::mutable_setvariablevalue() {
  
  if (setvariablevalue_ == NULL) {
    setvariablevalue_ = new ::SetVariableValue;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetVariableValue)
  return setvariablevalue_;
}
inline ::SetVariableValue* Default::release_setvariablevalue() {
  // @@protoc_insertion_point(field_release:Default.SetVariableValue)
  
  ::SetVariableValue* temp = setvariablevalue_;
  setvariablevalue_ = NULL;
  return temp;
}
inline void Default::set_allocated_setvariablevalue(::SetVariableValue* setvariablevalue) {
  delete setvariablevalue_;
  setvariablevalue_ = setvariablevalue;
  if (setvariablevalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetVariableValue)
}

// .SetVariableType SetVariableType = 7;
inline bool Default::has_setvariabletype() const {
  return this != internal_default_instance() && setvariabletype_ != NULL;
}
inline void Default::clear_setvariabletype() {
  if (GetArenaNoVirtual() == NULL && setvariabletype_ != NULL) delete setvariabletype_;
  setvariabletype_ = NULL;
}
inline const ::SetVariableType& Default::setvariabletype() const {
  // @@protoc_insertion_point(field_get:Default.SetVariableType)
  return setvariabletype_ != NULL ? *setvariabletype_
                         : *::SetVariableType::internal_default_instance();
}
inline ::SetVariableType* Default::mutable_setvariabletype() {
  
  if (setvariabletype_ == NULL) {
    setvariabletype_ = new ::SetVariableType;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetVariableType)
  return setvariabletype_;
}
inline ::SetVariableType* Default::release_setvariabletype() {
  // @@protoc_insertion_point(field_release:Default.SetVariableType)
  
  ::SetVariableType* temp = setvariabletype_;
  setvariabletype_ = NULL;
  return temp;
}
inline void Default::set_allocated_setvariabletype(::SetVariableType* setvariabletype) {
  delete setvariabletype_;
  setvariabletype_ = setvariabletype;
  if (setvariabletype) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetVariableType)
}

// .GetVariableValue GetVariableValue = 8;
inline bool Default::has_getvariablevalue() const {
  return this != internal_default_instance() && getvariablevalue_ != NULL;
}
inline void Default::clear_getvariablevalue() {
  if (GetArenaNoVirtual() == NULL && getvariablevalue_ != NULL) delete getvariablevalue_;
  getvariablevalue_ = NULL;
}
inline const ::GetVariableValue& Default::getvariablevalue() const {
  // @@protoc_insertion_point(field_get:Default.GetVariableValue)
  return getvariablevalue_ != NULL ? *getvariablevalue_
                         : *::GetVariableValue::internal_default_instance();
}
inline ::GetVariableValue* Default::mutable_getvariablevalue() {
  
  if (getvariablevalue_ == NULL) {
    getvariablevalue_ = new ::GetVariableValue;
  }
  // @@protoc_insertion_point(field_mutable:Default.GetVariableValue)
  return getvariablevalue_;
}
inline ::GetVariableValue* Default::release_getvariablevalue() {
  // @@protoc_insertion_point(field_release:Default.GetVariableValue)
  
  ::GetVariableValue* temp = getvariablevalue_;
  getvariablevalue_ = NULL;
  return temp;
}
inline void Default::set_allocated_getvariablevalue(::GetVariableValue* getvariablevalue) {
  delete getvariablevalue_;
  getvariablevalue_ = getvariablevalue;
  if (getvariablevalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.GetVariableValue)
}

// .SetContextParent SetContextParent = 9;
inline bool Default::has_setcontextparent() const {
  return this != internal_default_instance() && setcontextparent_ != NULL;
}
inline void Default::clear_setcontextparent() {
  if (GetArenaNoVirtual() == NULL && setcontextparent_ != NULL) delete setcontextparent_;
  setcontextparent_ = NULL;
}
inline const ::SetContextParent& Default::setcontextparent() const {
  // @@protoc_insertion_point(field_get:Default.SetContextParent)
  return setcontextparent_ != NULL ? *setcontextparent_
                         : *::SetContextParent::internal_default_instance();
}
inline ::SetContextParent* Default::mutable_setcontextparent() {
  
  if (setcontextparent_ == NULL) {
    setcontextparent_ = new ::SetContextParent;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetContextParent)
  return setcontextparent_;
}
inline ::SetContextParent* Default::release_setcontextparent() {
  // @@protoc_insertion_point(field_release:Default.SetContextParent)
  
  ::SetContextParent* temp = setcontextparent_;
  setcontextparent_ = NULL;
  return temp;
}
inline void Default::set_allocated_setcontextparent(::SetContextParent* setcontextparent) {
  delete setcontextparent_;
  setcontextparent_ = setcontextparent;
  if (setcontextparent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetContextParent)
}

// .SetEnumerationType SetEnumerationType = 10;
inline bool Default::has_setenumerationtype() const {
  return this != internal_default_instance() && setenumerationtype_ != NULL;
}
inline void Default::clear_setenumerationtype() {
  if (GetArenaNoVirtual() == NULL && setenumerationtype_ != NULL) delete setenumerationtype_;
  setenumerationtype_ = NULL;
}
inline const ::SetEnumerationType& Default::setenumerationtype() const {
  // @@protoc_insertion_point(field_get:Default.SetEnumerationType)
  return setenumerationtype_ != NULL ? *setenumerationtype_
                         : *::SetEnumerationType::internal_default_instance();
}
inline ::SetEnumerationType* Default::mutable_setenumerationtype() {
  
  if (setenumerationtype_ == NULL) {
    setenumerationtype_ = new ::SetEnumerationType;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetEnumerationType)
  return setenumerationtype_;
}
inline ::SetEnumerationType* Default::release_setenumerationtype() {
  // @@protoc_insertion_point(field_release:Default.SetEnumerationType)
  
  ::SetEnumerationType* temp = setenumerationtype_;
  setenumerationtype_ = NULL;
  return temp;
}
inline void Default::set_allocated_setenumerationtype(::SetEnumerationType* setenumerationtype) {
  delete setenumerationtype_;
  setenumerationtype_ = setenumerationtype;
  if (setenumerationtype) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetEnumerationType)
}

// .SetEnumerationValue SetEnumerationValue = 11;
inline bool Default::has_setenumerationvalue() const {
  return this != internal_default_instance() && setenumerationvalue_ != NULL;
}
inline void Default::clear_setenumerationvalue() {
  if (GetArenaNoVirtual() == NULL && setenumerationvalue_ != NULL) delete setenumerationvalue_;
  setenumerationvalue_ = NULL;
}
inline const ::SetEnumerationValue& Default::setenumerationvalue() const {
  // @@protoc_insertion_point(field_get:Default.SetEnumerationValue)
  return setenumerationvalue_ != NULL ? *setenumerationvalue_
                         : *::SetEnumerationValue::internal_default_instance();
}
inline ::SetEnumerationValue* Default::mutable_setenumerationvalue() {
  
  if (setenumerationvalue_ == NULL) {
    setenumerationvalue_ = new ::SetEnumerationValue;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetEnumerationValue)
  return setenumerationvalue_;
}
inline ::SetEnumerationValue* Default::release_setenumerationvalue() {
  // @@protoc_insertion_point(field_release:Default.SetEnumerationValue)
  
  ::SetEnumerationValue* temp = setenumerationvalue_;
  setenumerationvalue_ = NULL;
  return temp;
}
inline void Default::set_allocated_setenumerationvalue(::SetEnumerationValue* setenumerationvalue) {
  delete setenumerationvalue_;
  setenumerationvalue_ = setenumerationvalue;
  if (setenumerationvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetEnumerationValue)
}

// .GetEnumerationValue GetEnumerationValue = 12;
inline bool Default::has_getenumerationvalue() const {
  return this != internal_default_instance() && getenumerationvalue_ != NULL;
}
inline void Default::clear_getenumerationvalue() {
  if (GetArenaNoVirtual() == NULL && getenumerationvalue_ != NULL) delete getenumerationvalue_;
  getenumerationvalue_ = NULL;
}
inline const ::GetEnumerationValue& Default::getenumerationvalue() const {
  // @@protoc_insertion_point(field_get:Default.GetEnumerationValue)
  return getenumerationvalue_ != NULL ? *getenumerationvalue_
                         : *::GetEnumerationValue::internal_default_instance();
}
inline ::GetEnumerationValue* Default::mutable_getenumerationvalue() {
  
  if (getenumerationvalue_ == NULL) {
    getenumerationvalue_ = new ::GetEnumerationValue;
  }
  // @@protoc_insertion_point(field_mutable:Default.GetEnumerationValue)
  return getenumerationvalue_;
}
inline ::GetEnumerationValue* Default::release_getenumerationvalue() {
  // @@protoc_insertion_point(field_release:Default.GetEnumerationValue)
  
  ::GetEnumerationValue* temp = getenumerationvalue_;
  getenumerationvalue_ = NULL;
  return temp;
}
inline void Default::set_allocated_getenumerationvalue(::GetEnumerationValue* getenumerationvalue) {
  delete getenumerationvalue_;
  getenumerationvalue_ = getenumerationvalue;
  if (getenumerationvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.GetEnumerationValue)
}

// .RemoveEnumerationValue RemoveEnumerationValue = 13;
inline bool Default::has_removeenumerationvalue() const {
  return this != internal_default_instance() && removeenumerationvalue_ != NULL;
}
inline void Default::clear_removeenumerationvalue() {
  if (GetArenaNoVirtual() == NULL && removeenumerationvalue_ != NULL) delete removeenumerationvalue_;
  removeenumerationvalue_ = NULL;
}
inline const ::RemoveEnumerationValue& Default::removeenumerationvalue() const {
  // @@protoc_insertion_point(field_get:Default.RemoveEnumerationValue)
  return removeenumerationvalue_ != NULL ? *removeenumerationvalue_
                         : *::RemoveEnumerationValue::internal_default_instance();
}
inline ::RemoveEnumerationValue* Default::mutable_removeenumerationvalue() {
  
  if (removeenumerationvalue_ == NULL) {
    removeenumerationvalue_ = new ::RemoveEnumerationValue;
  }
  // @@protoc_insertion_point(field_mutable:Default.RemoveEnumerationValue)
  return removeenumerationvalue_;
}
inline ::RemoveEnumerationValue* Default::release_removeenumerationvalue() {
  // @@protoc_insertion_point(field_release:Default.RemoveEnumerationValue)
  
  ::RemoveEnumerationValue* temp = removeenumerationvalue_;
  removeenumerationvalue_ = NULL;
  return temp;
}
inline void Default::set_allocated_removeenumerationvalue(::RemoveEnumerationValue* removeenumerationvalue) {
  delete removeenumerationvalue_;
  removeenumerationvalue_ = removeenumerationvalue;
  if (removeenumerationvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.RemoveEnumerationValue)
}

// .AddClassAttribute AddClassAttribute = 14;
inline bool Default::has_addclassattribute() const {
  return this != internal_default_instance() && addclassattribute_ != NULL;
}
inline void Default::clear_addclassattribute() {
  if (GetArenaNoVirtual() == NULL && addclassattribute_ != NULL) delete addclassattribute_;
  addclassattribute_ = NULL;
}
inline const ::AddClassAttribute& Default::addclassattribute() const {
  // @@protoc_insertion_point(field_get:Default.AddClassAttribute)
  return addclassattribute_ != NULL ? *addclassattribute_
                         : *::AddClassAttribute::internal_default_instance();
}
inline ::AddClassAttribute* Default::mutable_addclassattribute() {
  
  if (addclassattribute_ == NULL) {
    addclassattribute_ = new ::AddClassAttribute;
  }
  // @@protoc_insertion_point(field_mutable:Default.AddClassAttribute)
  return addclassattribute_;
}
inline ::AddClassAttribute* Default::release_addclassattribute() {
  // @@protoc_insertion_point(field_release:Default.AddClassAttribute)
  
  ::AddClassAttribute* temp = addclassattribute_;
  addclassattribute_ = NULL;
  return temp;
}
inline void Default::set_allocated_addclassattribute(::AddClassAttribute* addclassattribute) {
  delete addclassattribute_;
  addclassattribute_ = addclassattribute;
  if (addclassattribute) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.AddClassAttribute)
}

// .RenameClassAttribute RenameClassAttribute = 15;
inline bool Default::has_renameclassattribute() const {
  return this != internal_default_instance() && renameclassattribute_ != NULL;
}
inline void Default::clear_renameclassattribute() {
  if (GetArenaNoVirtual() == NULL && renameclassattribute_ != NULL) delete renameclassattribute_;
  renameclassattribute_ = NULL;
}
inline const ::RenameClassAttribute& Default::renameclassattribute() const {
  // @@protoc_insertion_point(field_get:Default.RenameClassAttribute)
  return renameclassattribute_ != NULL ? *renameclassattribute_
                         : *::RenameClassAttribute::internal_default_instance();
}
inline ::RenameClassAttribute* Default::mutable_renameclassattribute() {
  
  if (renameclassattribute_ == NULL) {
    renameclassattribute_ = new ::RenameClassAttribute;
  }
  // @@protoc_insertion_point(field_mutable:Default.RenameClassAttribute)
  return renameclassattribute_;
}
inline ::RenameClassAttribute* Default::release_renameclassattribute() {
  // @@protoc_insertion_point(field_release:Default.RenameClassAttribute)
  
  ::RenameClassAttribute* temp = renameclassattribute_;
  renameclassattribute_ = NULL;
  return temp;
}
inline void Default::set_allocated_renameclassattribute(::RenameClassAttribute* renameclassattribute) {
  delete renameclassattribute_;
  renameclassattribute_ = renameclassattribute;
  if (renameclassattribute) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.RenameClassAttribute)
}

// .RemoveClassAttribute RemoveClassAttribute = 16;
inline bool Default::has_removeclassattribute() const {
  return this != internal_default_instance() && removeclassattribute_ != NULL;
}
inline void Default::clear_removeclassattribute() {
  if (GetArenaNoVirtual() == NULL && removeclassattribute_ != NULL) delete removeclassattribute_;
  removeclassattribute_ = NULL;
}
inline const ::RemoveClassAttribute& Default::removeclassattribute() const {
  // @@protoc_insertion_point(field_get:Default.RemoveClassAttribute)
  return removeclassattribute_ != NULL ? *removeclassattribute_
                         : *::RemoveClassAttribute::internal_default_instance();
}
inline ::RemoveClassAttribute* Default::mutable_removeclassattribute() {
  
  if (removeclassattribute_ == NULL) {
    removeclassattribute_ = new ::RemoveClassAttribute;
  }
  // @@protoc_insertion_point(field_mutable:Default.RemoveClassAttribute)
  return removeclassattribute_;
}
inline ::RemoveClassAttribute* Default::release_removeclassattribute() {
  // @@protoc_insertion_point(field_release:Default.RemoveClassAttribute)
  
  ::RemoveClassAttribute* temp = removeclassattribute_;
  removeclassattribute_ = NULL;
  return temp;
}
inline void Default::set_allocated_removeclassattribute(::RemoveClassAttribute* removeclassattribute) {
  delete removeclassattribute_;
  removeclassattribute_ = removeclassattribute;
  if (removeclassattribute) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.RemoveClassAttribute)
}

// .AddClassMemberFunction AddClassMemberFunction = 17;
inline bool Default::has_addclassmemberfunction() const {
  return this != internal_default_instance() && addclassmemberfunction_ != NULL;
}
inline void Default::clear_addclassmemberfunction() {
  if (GetArenaNoVirtual() == NULL && addclassmemberfunction_ != NULL) delete addclassmemberfunction_;
  addclassmemberfunction_ = NULL;
}
inline const ::AddClassMemberFunction& Default::addclassmemberfunction() const {
  // @@protoc_insertion_point(field_get:Default.AddClassMemberFunction)
  return addclassmemberfunction_ != NULL ? *addclassmemberfunction_
                         : *::AddClassMemberFunction::internal_default_instance();
}
inline ::AddClassMemberFunction* Default::mutable_addclassmemberfunction() {
  
  if (addclassmemberfunction_ == NULL) {
    addclassmemberfunction_ = new ::AddClassMemberFunction;
  }
  // @@protoc_insertion_point(field_mutable:Default.AddClassMemberFunction)
  return addclassmemberfunction_;
}
inline ::AddClassMemberFunction* Default::release_addclassmemberfunction() {
  // @@protoc_insertion_point(field_release:Default.AddClassMemberFunction)
  
  ::AddClassMemberFunction* temp = addclassmemberfunction_;
  addclassmemberfunction_ = NULL;
  return temp;
}
inline void Default::set_allocated_addclassmemberfunction(::AddClassMemberFunction* addclassmemberfunction) {
  delete addclassmemberfunction_;
  addclassmemberfunction_ = addclassmemberfunction;
  if (addclassmemberfunction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.AddClassMemberFunction)
}

// .SetListType SetListType = 18;
inline bool Default::has_setlisttype() const {
  return this != internal_default_instance() && setlisttype_ != NULL;
}
inline void Default::clear_setlisttype() {
  if (GetArenaNoVirtual() == NULL && setlisttype_ != NULL) delete setlisttype_;
  setlisttype_ = NULL;
}
inline const ::SetListType& Default::setlisttype() const {
  // @@protoc_insertion_point(field_get:Default.SetListType)
  return setlisttype_ != NULL ? *setlisttype_
                         : *::SetListType::internal_default_instance();
}
inline ::SetListType* Default::mutable_setlisttype() {
  
  if (setlisttype_ == NULL) {
    setlisttype_ = new ::SetListType;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetListType)
  return setlisttype_;
}
inline ::SetListType* Default::release_setlisttype() {
  // @@protoc_insertion_point(field_release:Default.SetListType)
  
  ::SetListType* temp = setlisttype_;
  setlisttype_ = NULL;
  return temp;
}
inline void Default::set_allocated_setlisttype(::SetListType* setlisttype) {
  delete setlisttype_;
  setlisttype_ = setlisttype;
  if (setlisttype) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetListType)
}

// .CallFunction CallFunction = 19;
inline bool Default::has_callfunction() const {
  return this != internal_default_instance() && callfunction_ != NULL;
}
inline void Default::clear_callfunction() {
  if (GetArenaNoVirtual() == NULL && callfunction_ != NULL) delete callfunction_;
  callfunction_ = NULL;
}
inline const ::CallFunction& Default::callfunction() const {
  // @@protoc_insertion_point(field_get:Default.CallFunction)
  return callfunction_ != NULL ? *callfunction_
                         : *::CallFunction::internal_default_instance();
}
inline ::CallFunction* Default::mutable_callfunction() {
  
  if (callfunction_ == NULL) {
    callfunction_ = new ::CallFunction;
  }
  // @@protoc_insertion_point(field_mutable:Default.CallFunction)
  return callfunction_;
}
inline ::CallFunction* Default::release_callfunction() {
  // @@protoc_insertion_point(field_release:Default.CallFunction)
  
  ::CallFunction* temp = callfunction_;
  callfunction_ = NULL;
  return temp;
}
inline void Default::set_allocated_callfunction(::CallFunction* callfunction) {
  delete callfunction_;
  callfunction_ = callfunction;
  if (callfunction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.CallFunction)
}

// .SetFunctionParameter SetFunctionParameter = 20;
inline bool Default::has_setfunctionparameter() const {
  return this != internal_default_instance() && setfunctionparameter_ != NULL;
}
inline void Default::clear_setfunctionparameter() {
  if (GetArenaNoVirtual() == NULL && setfunctionparameter_ != NULL) delete setfunctionparameter_;
  setfunctionparameter_ = NULL;
}
inline const ::SetFunctionParameter& Default::setfunctionparameter() const {
  // @@protoc_insertion_point(field_get:Default.SetFunctionParameter)
  return setfunctionparameter_ != NULL ? *setfunctionparameter_
                         : *::SetFunctionParameter::internal_default_instance();
}
inline ::SetFunctionParameter* Default::mutable_setfunctionparameter() {
  
  if (setfunctionparameter_ == NULL) {
    setfunctionparameter_ = new ::SetFunctionParameter;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetFunctionParameter)
  return setfunctionparameter_;
}
inline ::SetFunctionParameter* Default::release_setfunctionparameter() {
  // @@protoc_insertion_point(field_release:Default.SetFunctionParameter)
  
  ::SetFunctionParameter* temp = setfunctionparameter_;
  setfunctionparameter_ = NULL;
  return temp;
}
inline void Default::set_allocated_setfunctionparameter(::SetFunctionParameter* setfunctionparameter) {
  delete setfunctionparameter_;
  setfunctionparameter_ = setfunctionparameter;
  if (setfunctionparameter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetFunctionParameter)
}

// .SetFunctionReturn SetFunctionReturn = 21;
inline bool Default::has_setfunctionreturn() const {
  return this != internal_default_instance() && setfunctionreturn_ != NULL;
}
inline void Default::clear_setfunctionreturn() {
  if (GetArenaNoVirtual() == NULL && setfunctionreturn_ != NULL) delete setfunctionreturn_;
  setfunctionreturn_ = NULL;
}
inline const ::SetFunctionReturn& Default::setfunctionreturn() const {
  // @@protoc_insertion_point(field_get:Default.SetFunctionReturn)
  return setfunctionreturn_ != NULL ? *setfunctionreturn_
                         : *::SetFunctionReturn::internal_default_instance();
}
inline ::SetFunctionReturn* Default::mutable_setfunctionreturn() {
  
  if (setfunctionreturn_ == NULL) {
    setfunctionreturn_ = new ::SetFunctionReturn;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetFunctionReturn)
  return setfunctionreturn_;
}
inline ::SetFunctionReturn* Default::release_setfunctionreturn() {
  // @@protoc_insertion_point(field_release:Default.SetFunctionReturn)
  
  ::SetFunctionReturn* temp = setfunctionreturn_;
  setfunctionreturn_ = NULL;
  return temp;
}
inline void Default::set_allocated_setfunctionreturn(::SetFunctionReturn* setfunctionreturn) {
  delete setfunctionreturn_;
  setfunctionreturn_ = setfunctionreturn;
  if (setfunctionreturn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetFunctionReturn)
}

// .SetFunctionEntryPoint SetFunctionEntryPoint = 22;
inline bool Default::has_setfunctionentrypoint() const {
  return this != internal_default_instance() && setfunctionentrypoint_ != NULL;
}
inline void Default::clear_setfunctionentrypoint() {
  if (GetArenaNoVirtual() == NULL && setfunctionentrypoint_ != NULL) delete setfunctionentrypoint_;
  setfunctionentrypoint_ = NULL;
}
inline const ::SetFunctionEntryPoint& Default::setfunctionentrypoint() const {
  // @@protoc_insertion_point(field_get:Default.SetFunctionEntryPoint)
  return setfunctionentrypoint_ != NULL ? *setfunctionentrypoint_
                         : *::SetFunctionEntryPoint::internal_default_instance();
}
inline ::SetFunctionEntryPoint* Default::mutable_setfunctionentrypoint() {
  
  if (setfunctionentrypoint_ == NULL) {
    setfunctionentrypoint_ = new ::SetFunctionEntryPoint;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetFunctionEntryPoint)
  return setfunctionentrypoint_;
}
inline ::SetFunctionEntryPoint* Default::release_setfunctionentrypoint() {
  // @@protoc_insertion_point(field_release:Default.SetFunctionEntryPoint)
  
  ::SetFunctionEntryPoint* temp = setfunctionentrypoint_;
  setfunctionentrypoint_ = NULL;
  return temp;
}
inline void Default::set_allocated_setfunctionentrypoint(::SetFunctionEntryPoint* setfunctionentrypoint) {
  delete setfunctionentrypoint_;
  setfunctionentrypoint_ = setfunctionentrypoint;
  if (setfunctionentrypoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetFunctionEntryPoint)
}

// .RemoveFunctionInstruction RemoveFunctionInstruction = 23;
inline bool Default::has_removefunctioninstruction() const {
  return this != internal_default_instance() && removefunctioninstruction_ != NULL;
}
inline void Default::clear_removefunctioninstruction() {
  if (GetArenaNoVirtual() == NULL && removefunctioninstruction_ != NULL) delete removefunctioninstruction_;
  removefunctioninstruction_ = NULL;
}
inline const ::RemoveFunctionInstruction& Default::removefunctioninstruction() const {
  // @@protoc_insertion_point(field_get:Default.RemoveFunctionInstruction)
  return removefunctioninstruction_ != NULL ? *removefunctioninstruction_
                         : *::RemoveFunctionInstruction::internal_default_instance();
}
inline ::RemoveFunctionInstruction* Default::mutable_removefunctioninstruction() {
  
  if (removefunctioninstruction_ == NULL) {
    removefunctioninstruction_ = new ::RemoveFunctionInstruction;
  }
  // @@protoc_insertion_point(field_mutable:Default.RemoveFunctionInstruction)
  return removefunctioninstruction_;
}
inline ::RemoveFunctionInstruction* Default::release_removefunctioninstruction() {
  // @@protoc_insertion_point(field_release:Default.RemoveFunctionInstruction)
  
  ::RemoveFunctionInstruction* temp = removefunctioninstruction_;
  removefunctioninstruction_ = NULL;
  return temp;
}
inline void Default::set_allocated_removefunctioninstruction(::RemoveFunctionInstruction* removefunctioninstruction) {
  delete removefunctioninstruction_;
  removefunctioninstruction_ = removefunctioninstruction;
  if (removefunctioninstruction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.RemoveFunctionInstruction)
}

// .AddInstruction AddInstruction = 24;
inline bool Default::has_addinstruction() const {
  return this != internal_default_instance() && addinstruction_ != NULL;
}
inline void Default::clear_addinstruction() {
  if (GetArenaNoVirtual() == NULL && addinstruction_ != NULL) delete addinstruction_;
  addinstruction_ = NULL;
}
inline const ::AddInstruction& Default::addinstruction() const {
  // @@protoc_insertion_point(field_get:Default.AddInstruction)
  return addinstruction_ != NULL ? *addinstruction_
                         : *::AddInstruction::internal_default_instance();
}
inline ::AddInstruction* Default::mutable_addinstruction() {
  
  if (addinstruction_ == NULL) {
    addinstruction_ = new ::AddInstruction;
  }
  // @@protoc_insertion_point(field_mutable:Default.AddInstruction)
  return addinstruction_;
}
inline ::AddInstruction* Default::release_addinstruction() {
  // @@protoc_insertion_point(field_release:Default.AddInstruction)
  
  ::AddInstruction* temp = addinstruction_;
  addinstruction_ = NULL;
  return temp;
}
inline void Default::set_allocated_addinstruction(::AddInstruction* addinstruction) {
  delete addinstruction_;
  addinstruction_ = addinstruction;
  if (addinstruction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.AddInstruction)
}

// .LinkInstructionExecution LinkInstructionExecution = 25;
inline bool Default::has_linkinstructionexecution() const {
  return this != internal_default_instance() && linkinstructionexecution_ != NULL;
}
inline void Default::clear_linkinstructionexecution() {
  if (GetArenaNoVirtual() == NULL && linkinstructionexecution_ != NULL) delete linkinstructionexecution_;
  linkinstructionexecution_ = NULL;
}
inline const ::LinkInstructionExecution& Default::linkinstructionexecution() const {
  // @@protoc_insertion_point(field_get:Default.LinkInstructionExecution)
  return linkinstructionexecution_ != NULL ? *linkinstructionexecution_
                         : *::LinkInstructionExecution::internal_default_instance();
}
inline ::LinkInstructionExecution* Default::mutable_linkinstructionexecution() {
  
  if (linkinstructionexecution_ == NULL) {
    linkinstructionexecution_ = new ::LinkInstructionExecution;
  }
  // @@protoc_insertion_point(field_mutable:Default.LinkInstructionExecution)
  return linkinstructionexecution_;
}
inline ::LinkInstructionExecution* Default::release_linkinstructionexecution() {
  // @@protoc_insertion_point(field_release:Default.LinkInstructionExecution)
  
  ::LinkInstructionExecution* temp = linkinstructionexecution_;
  linkinstructionexecution_ = NULL;
  return temp;
}
inline void Default::set_allocated_linkinstructionexecution(::LinkInstructionExecution* linkinstructionexecution) {
  delete linkinstructionexecution_;
  linkinstructionexecution_ = linkinstructionexecution;
  if (linkinstructionexecution) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.LinkInstructionExecution)
}

// .LinkInstructionData LinkInstructionData = 26;
inline bool Default::has_linkinstructiondata() const {
  return this != internal_default_instance() && linkinstructiondata_ != NULL;
}
inline void Default::clear_linkinstructiondata() {
  if (GetArenaNoVirtual() == NULL && linkinstructiondata_ != NULL) delete linkinstructiondata_;
  linkinstructiondata_ = NULL;
}
inline const ::LinkInstructionData& Default::linkinstructiondata() const {
  // @@protoc_insertion_point(field_get:Default.LinkInstructionData)
  return linkinstructiondata_ != NULL ? *linkinstructiondata_
                         : *::LinkInstructionData::internal_default_instance();
}
inline ::LinkInstructionData* Default::mutable_linkinstructiondata() {
  
  if (linkinstructiondata_ == NULL) {
    linkinstructiondata_ = new ::LinkInstructionData;
  }
  // @@protoc_insertion_point(field_mutable:Default.LinkInstructionData)
  return linkinstructiondata_;
}
inline ::LinkInstructionData* Default::release_linkinstructiondata() {
  // @@protoc_insertion_point(field_release:Default.LinkInstructionData)
  
  ::LinkInstructionData* temp = linkinstructiondata_;
  linkinstructiondata_ = NULL;
  return temp;
}
inline void Default::set_allocated_linkinstructiondata(::LinkInstructionData* linkinstructiondata) {
  delete linkinstructiondata_;
  linkinstructiondata_ = linkinstructiondata;
  if (linkinstructiondata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.LinkInstructionData)
}

// .SetInstructionInputValue SetInstructionInputValue = 27;
inline bool Default::has_setinstructioninputvalue() const {
  return this != internal_default_instance() && setinstructioninputvalue_ != NULL;
}
inline void Default::clear_setinstructioninputvalue() {
  if (GetArenaNoVirtual() == NULL && setinstructioninputvalue_ != NULL) delete setinstructioninputvalue_;
  setinstructioninputvalue_ = NULL;
}
inline const ::SetInstructionInputValue& Default::setinstructioninputvalue() const {
  // @@protoc_insertion_point(field_get:Default.SetInstructionInputValue)
  return setinstructioninputvalue_ != NULL ? *setinstructioninputvalue_
                         : *::SetInstructionInputValue::internal_default_instance();
}
inline ::SetInstructionInputValue* Default::mutable_setinstructioninputvalue() {
  
  if (setinstructioninputvalue_ == NULL) {
    setinstructioninputvalue_ = new ::SetInstructionInputValue;
  }
  // @@protoc_insertion_point(field_mutable:Default.SetInstructionInputValue)
  return setinstructioninputvalue_;
}
inline ::SetInstructionInputValue* Default::release_setinstructioninputvalue() {
  // @@protoc_insertion_point(field_release:Default.SetInstructionInputValue)
  
  ::SetInstructionInputValue* temp = setinstructioninputvalue_;
  setinstructioninputvalue_ = NULL;
  return temp;
}
inline void Default::set_allocated_setinstructioninputvalue(::SetInstructionInputValue* setinstructioninputvalue) {
  delete setinstructioninputvalue_;
  setinstructioninputvalue_ = setinstructioninputvalue;
  if (setinstructioninputvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.SetInstructionInputValue)
}

// .UnlinkInstructionFlow UnlinkInstructionFlow = 28;
inline bool Default::has_unlinkinstructionflow() const {
  return this != internal_default_instance() && unlinkinstructionflow_ != NULL;
}
inline void Default::clear_unlinkinstructionflow() {
  if (GetArenaNoVirtual() == NULL && unlinkinstructionflow_ != NULL) delete unlinkinstructionflow_;
  unlinkinstructionflow_ = NULL;
}
inline const ::UnlinkInstructionFlow& Default::unlinkinstructionflow() const {
  // @@protoc_insertion_point(field_get:Default.UnlinkInstructionFlow)
  return unlinkinstructionflow_ != NULL ? *unlinkinstructionflow_
                         : *::UnlinkInstructionFlow::internal_default_instance();
}
inline ::UnlinkInstructionFlow* Default::mutable_unlinkinstructionflow() {
  
  if (unlinkinstructionflow_ == NULL) {
    unlinkinstructionflow_ = new ::UnlinkInstructionFlow;
  }
  // @@protoc_insertion_point(field_mutable:Default.UnlinkInstructionFlow)
  return unlinkinstructionflow_;
}
inline ::UnlinkInstructionFlow* Default::release_unlinkinstructionflow() {
  // @@protoc_insertion_point(field_release:Default.UnlinkInstructionFlow)
  
  ::UnlinkInstructionFlow* temp = unlinkinstructionflow_;
  unlinkinstructionflow_ = NULL;
  return temp;
}
inline void Default::set_allocated_unlinkinstructionflow(::UnlinkInstructionFlow* unlinkinstructionflow) {
  delete unlinkinstructionflow_;
  unlinkinstructionflow_ = unlinkinstructionflow;
  if (unlinkinstructionflow) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.UnlinkInstructionFlow)
}

// .UnlinkInstructionInput UnlinkInstructionInput = 29;
inline bool Default::has_unlinkinstructioninput() const {
  return this != internal_default_instance() && unlinkinstructioninput_ != NULL;
}
inline void Default::clear_unlinkinstructioninput() {
  if (GetArenaNoVirtual() == NULL && unlinkinstructioninput_ != NULL) delete unlinkinstructioninput_;
  unlinkinstructioninput_ = NULL;
}
inline const ::UnlinkInstructionInput& Default::unlinkinstructioninput() const {
  // @@protoc_insertion_point(field_get:Default.UnlinkInstructionInput)
  return unlinkinstructioninput_ != NULL ? *unlinkinstructioninput_
                         : *::UnlinkInstructionInput::internal_default_instance();
}
inline ::UnlinkInstructionInput* Default::mutable_unlinkinstructioninput() {
  
  if (unlinkinstructioninput_ == NULL) {
    unlinkinstructioninput_ = new ::UnlinkInstructionInput;
  }
  // @@protoc_insertion_point(field_mutable:Default.UnlinkInstructionInput)
  return unlinkinstructioninput_;
}
inline ::UnlinkInstructionInput* Default::release_unlinkinstructioninput() {
  // @@protoc_insertion_point(field_release:Default.UnlinkInstructionInput)
  
  ::UnlinkInstructionInput* temp = unlinkinstructioninput_;
  unlinkinstructioninput_ = NULL;
  return temp;
}
inline void Default::set_allocated_unlinkinstructioninput(::UnlinkInstructionInput* unlinkinstructioninput) {
  delete unlinkinstructioninput_;
  unlinkinstructioninput_ = unlinkinstructioninput;
  if (unlinkinstructioninput) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Default.UnlinkInstructionInput)
}

// -------------------------------------------------------------------

// GetEnumerationValue

// string Name = 1;
inline void GetEnumerationValue::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetEnumerationValue::name() const {
  // @@protoc_insertion_point(field_get:GetEnumerationValue.Name)
  return name_.GetNoArena();
}
inline void GetEnumerationValue::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetEnumerationValue.Name)
}
#if LANG_CXX11
inline void GetEnumerationValue::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetEnumerationValue.Name)
}
#endif
inline void GetEnumerationValue::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetEnumerationValue.Name)
}
inline void GetEnumerationValue::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetEnumerationValue.Name)
}
inline ::std::string* GetEnumerationValue::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:GetEnumerationValue.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetEnumerationValue::release_name() {
  // @@protoc_insertion_point(field_release:GetEnumerationValue.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEnumerationValue::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GetEnumerationValue.Name)
}

// uint32 EnumId = 2;
inline void GetEnumerationValue::clear_enumid() {
  enumid_ = 0u;
}
inline ::google::protobuf::uint32 GetEnumerationValue::enumid() const {
  // @@protoc_insertion_point(field_get:GetEnumerationValue.EnumId)
  return enumid_;
}
inline void GetEnumerationValue::set_enumid(::google::protobuf::uint32 value) {
  
  enumid_ = value;
  // @@protoc_insertion_point(field_set:GetEnumerationValue.EnumId)
}

// -------------------------------------------------------------------

// GetVariableValue

// uint32 VariableId = 1;
inline void GetVariableValue::clear_variableid() {
  variableid_ = 0u;
}
inline ::google::protobuf::uint32 GetVariableValue::variableid() const {
  // @@protoc_insertion_point(field_get:GetVariableValue.VariableId)
  return variableid_;
}
inline void GetVariableValue::set_variableid(::google::protobuf::uint32 value) {
  
  variableid_ = value;
  // @@protoc_insertion_point(field_set:GetVariableValue.VariableId)
}

// -------------------------------------------------------------------

// LinkInstructionData

// uint32 FunctionID = 1;
inline void LinkInstructionData::clear_functionid() {
  functionid_ = 0u;
}
inline ::google::protobuf::uint32 LinkInstructionData::functionid() const {
  // @@protoc_insertion_point(field_get:LinkInstructionData.FunctionID)
  return functionid_;
}
inline void LinkInstructionData::set_functionid(::google::protobuf::uint32 value) {
  
  functionid_ = value;
  // @@protoc_insertion_point(field_set:LinkInstructionData.FunctionID)
}

// uint32 FromId = 2;
inline void LinkInstructionData::clear_fromid() {
  fromid_ = 0u;
}
inline ::google::protobuf::uint32 LinkInstructionData::fromid() const {
  // @@protoc_insertion_point(field_get:LinkInstructionData.FromId)
  return fromid_;
}
inline void LinkInstructionData::set_fromid(::google::protobuf::uint32 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:LinkInstructionData.FromId)
}

// string OutputName = 3;
inline void LinkInstructionData::clear_outputname() {
  outputname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LinkInstructionData::outputname() const {
  // @@protoc_insertion_point(field_get:LinkInstructionData.OutputName)
  return outputname_.GetNoArena();
}
inline void LinkInstructionData::set_outputname(const ::std::string& value) {
  
  outputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LinkInstructionData.OutputName)
}
#if LANG_CXX11
inline void LinkInstructionData::set_outputname(::std::string&& value) {
  
  outputname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LinkInstructionData.OutputName)
}
#endif
inline void LinkInstructionData::set_outputname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  outputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LinkInstructionData.OutputName)
}
inline void LinkInstructionData::set_outputname(const char* value, size_t size) {
  
  outputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LinkInstructionData.OutputName)
}
inline ::std::string* LinkInstructionData::mutable_outputname() {
  
  // @@protoc_insertion_point(field_mutable:LinkInstructionData.OutputName)
  return outputname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkInstructionData::release_outputname() {
  // @@protoc_insertion_point(field_release:LinkInstructionData.OutputName)
  
  return outputname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkInstructionData::set_allocated_outputname(::std::string* outputname) {
  if (outputname != NULL) {
    
  } else {
    
  }
  outputname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), outputname);
  // @@protoc_insertion_point(field_set_allocated:LinkInstructionData.OutputName)
}

// uint32 ToId = 4;
inline void LinkInstructionData::clear_toid() {
  toid_ = 0u;
}
inline ::google::protobuf::uint32 LinkInstructionData::toid() const {
  // @@protoc_insertion_point(field_get:LinkInstructionData.ToId)
  return toid_;
}
inline void LinkInstructionData::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:LinkInstructionData.ToId)
}

// string InputName = 5;
inline void LinkInstructionData::clear_inputname() {
  inputname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LinkInstructionData::inputname() const {
  // @@protoc_insertion_point(field_get:LinkInstructionData.InputName)
  return inputname_.GetNoArena();
}
inline void LinkInstructionData::set_inputname(const ::std::string& value) {
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LinkInstructionData.InputName)
}
#if LANG_CXX11
inline void LinkInstructionData::set_inputname(::std::string&& value) {
  
  inputname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LinkInstructionData.InputName)
}
#endif
inline void LinkInstructionData::set_inputname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LinkInstructionData.InputName)
}
inline void LinkInstructionData::set_inputname(const char* value, size_t size) {
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LinkInstructionData.InputName)
}
inline ::std::string* LinkInstructionData::mutable_inputname() {
  
  // @@protoc_insertion_point(field_mutable:LinkInstructionData.InputName)
  return inputname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkInstructionData::release_inputname() {
  // @@protoc_insertion_point(field_release:LinkInstructionData.InputName)
  
  return inputname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkInstructionData::set_allocated_inputname(::std::string* inputname) {
  if (inputname != NULL) {
    
  } else {
    
  }
  inputname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inputname);
  // @@protoc_insertion_point(field_set_allocated:LinkInstructionData.InputName)
}

// -------------------------------------------------------------------

// LinkInstructionExecution

// uint32 FunctionID = 1;
inline void LinkInstructionExecution::clear_functionid() {
  functionid_ = 0u;
}
inline ::google::protobuf::uint32 LinkInstructionExecution::functionid() const {
  // @@protoc_insertion_point(field_get:LinkInstructionExecution.FunctionID)
  return functionid_;
}
inline void LinkInstructionExecution::set_functionid(::google::protobuf::uint32 value) {
  
  functionid_ = value;
  // @@protoc_insertion_point(field_set:LinkInstructionExecution.FunctionID)
}

// uint32 FromId = 2;
inline void LinkInstructionExecution::clear_fromid() {
  fromid_ = 0u;
}
inline ::google::protobuf::uint32 LinkInstructionExecution::fromid() const {
  // @@protoc_insertion_point(field_get:LinkInstructionExecution.FromId)
  return fromid_;
}
inline void LinkInstructionExecution::set_fromid(::google::protobuf::uint32 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:LinkInstructionExecution.FromId)
}

// uint32 OutIndex = 3;
inline void LinkInstructionExecution::clear_outindex() {
  outindex_ = 0u;
}
inline ::google::protobuf::uint32 LinkInstructionExecution::outindex() const {
  // @@protoc_insertion_point(field_get:LinkInstructionExecution.OutIndex)
  return outindex_;
}
inline void LinkInstructionExecution::set_outindex(::google::protobuf::uint32 value) {
  
  outindex_ = value;
  // @@protoc_insertion_point(field_set:LinkInstructionExecution.OutIndex)
}

// uint32 ToId = 4;
inline void LinkInstructionExecution::clear_toid() {
  toid_ = 0u;
}
inline ::google::protobuf::uint32 LinkInstructionExecution::toid() const {
  // @@protoc_insertion_point(field_get:LinkInstructionExecution.ToId)
  return toid_;
}
inline void LinkInstructionExecution::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:LinkInstructionExecution.ToId)
}

// -------------------------------------------------------------------

// Move

// .ENTITY EntityType = 1;
inline void Move::clear_entitytype() {
  entitytype_ = 0;
}
inline ::ENTITY Move::entitytype() const {
  // @@protoc_insertion_point(field_get:Move.EntityType)
  return static_cast< ::ENTITY >(entitytype_);
}
inline void Move::set_entitytype(::ENTITY value) {
  
  entitytype_ = value;
  // @@protoc_insertion_point(field_set:Move.EntityType)
}

// uint32 FromID = 2;
inline void Move::clear_fromid() {
  fromid_ = 0u;
}
inline ::google::protobuf::uint32 Move::fromid() const {
  // @@protoc_insertion_point(field_get:Move.FromID)
  return fromid_;
}
inline void Move::set_fromid(::google::protobuf::uint32 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:Move.FromID)
}

// uint32 ToID = 3;
inline void Move::clear_toid() {
  toid_ = 0u;
}
inline ::google::protobuf::uint32 Move::toid() const {
  // @@protoc_insertion_point(field_get:Move.ToID)
  return toid_;
}
inline void Move::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:Move.ToID)
}

// string Name = 4;
inline void Move::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Move::name() const {
  // @@protoc_insertion_point(field_get:Move.Name)
  return name_.GetNoArena();
}
inline void Move::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Move.Name)
}
#if LANG_CXX11
inline void Move::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Move.Name)
}
#endif
inline void Move::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Move.Name)
}
inline void Move::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Move.Name)
}
inline ::std::string* Move::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Move.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Move::release_name() {
  // @@protoc_insertion_point(field_release:Move.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Move::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Move.Name)
}

// -------------------------------------------------------------------

// Object

// -------------------------------------------------------------------

// Remove

// .ENTITY EntityType = 1;
inline void Remove::clear_entitytype() {
  entitytype_ = 0;
}
inline ::ENTITY Remove::entitytype() const {
  // @@protoc_insertion_point(field_get:Remove.EntityType)
  return static_cast< ::ENTITY >(entitytype_);
}
inline void Remove::set_entitytype(::ENTITY value) {
  
  entitytype_ = value;
  // @@protoc_insertion_point(field_set:Remove.EntityType)
}

// uint32 ContainerID = 2;
inline void Remove::clear_containerid() {
  containerid_ = 0u;
}
inline ::google::protobuf::uint32 Remove::containerid() const {
  // @@protoc_insertion_point(field_get:Remove.ContainerID)
  return containerid_;
}
inline void Remove::set_containerid(::google::protobuf::uint32 value) {
  
  containerid_ = value;
  // @@protoc_insertion_point(field_set:Remove.ContainerID)
}

// string Name = 3;
inline void Remove::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Remove::name() const {
  // @@protoc_insertion_point(field_get:Remove.Name)
  return name_.GetNoArena();
}
inline void Remove::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Remove.Name)
}
#if LANG_CXX11
inline void Remove::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Remove.Name)
}
#endif
inline void Remove::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Remove.Name)
}
inline void Remove::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Remove.Name)
}
inline ::std::string* Remove::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Remove.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Remove::release_name() {
  // @@protoc_insertion_point(field_release:Remove.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Remove::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Remove.Name)
}

// -------------------------------------------------------------------

// RemoveClassAttribute

// uint32 ClassId = 1;
inline void RemoveClassAttribute::clear_classid() {
  classid_ = 0u;
}
inline ::google::protobuf::uint32 RemoveClassAttribute::classid() const {
  // @@protoc_insertion_point(field_get:RemoveClassAttribute.ClassId)
  return classid_;
}
inline void RemoveClassAttribute::set_classid(::google::protobuf::uint32 value) {
  
  classid_ = value;
  // @@protoc_insertion_point(field_set:RemoveClassAttribute.ClassId)
}

// string Name = 2;
inline void RemoveClassAttribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveClassAttribute::name() const {
  // @@protoc_insertion_point(field_get:RemoveClassAttribute.Name)
  return name_.GetNoArena();
}
inline void RemoveClassAttribute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoveClassAttribute.Name)
}
#if LANG_CXX11
inline void RemoveClassAttribute::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoveClassAttribute.Name)
}
#endif
inline void RemoveClassAttribute::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoveClassAttribute.Name)
}
inline void RemoveClassAttribute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoveClassAttribute.Name)
}
inline ::std::string* RemoveClassAttribute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RemoveClassAttribute.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveClassAttribute::release_name() {
  // @@protoc_insertion_point(field_release:RemoveClassAttribute.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveClassAttribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RemoveClassAttribute.Name)
}

// -------------------------------------------------------------------

// RemoveEnumerationValue

// uint32 EnumId = 1;
inline void RemoveEnumerationValue::clear_enumid() {
  enumid_ = 0u;
}
inline ::google::protobuf::uint32 RemoveEnumerationValue::enumid() const {
  // @@protoc_insertion_point(field_get:RemoveEnumerationValue.EnumId)
  return enumid_;
}
inline void RemoveEnumerationValue::set_enumid(::google::protobuf::uint32 value) {
  
  enumid_ = value;
  // @@protoc_insertion_point(field_set:RemoveEnumerationValue.EnumId)
}

// string Name = 2;
inline void RemoveEnumerationValue::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveEnumerationValue::name() const {
  // @@protoc_insertion_point(field_get:RemoveEnumerationValue.Name)
  return name_.GetNoArena();
}
inline void RemoveEnumerationValue::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoveEnumerationValue.Name)
}
#if LANG_CXX11
inline void RemoveEnumerationValue::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoveEnumerationValue.Name)
}
#endif
inline void RemoveEnumerationValue::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoveEnumerationValue.Name)
}
inline void RemoveEnumerationValue::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoveEnumerationValue.Name)
}
inline ::std::string* RemoveEnumerationValue::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RemoveEnumerationValue.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveEnumerationValue::release_name() {
  // @@protoc_insertion_point(field_release:RemoveEnumerationValue.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveEnumerationValue::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RemoveEnumerationValue.Name)
}

// -------------------------------------------------------------------

// RemoveFunctionInstruction

// uint32 FunctionId = 1;
inline void RemoveFunctionInstruction::clear_functionid() {
  functionid_ = 0u;
}
inline ::google::protobuf::uint32 RemoveFunctionInstruction::functionid() const {
  // @@protoc_insertion_point(field_get:RemoveFunctionInstruction.FunctionId)
  return functionid_;
}
inline void RemoveFunctionInstruction::set_functionid(::google::protobuf::uint32 value) {
  
  functionid_ = value;
  // @@protoc_insertion_point(field_set:RemoveFunctionInstruction.FunctionId)
}

// uint32 Instruction = 2;
inline void RemoveFunctionInstruction::clear_instruction() {
  instruction_ = 0u;
}
inline ::google::protobuf::uint32 RemoveFunctionInstruction::instruction() const {
  // @@protoc_insertion_point(field_get:RemoveFunctionInstruction.Instruction)
  return instruction_;
}
inline void RemoveFunctionInstruction::set_instruction(::google::protobuf::uint32 value) {
  
  instruction_ = value;
  // @@protoc_insertion_point(field_set:RemoveFunctionInstruction.Instruction)
}

// -------------------------------------------------------------------

// Rename

// .ENTITY EntityType = 1;
inline void Rename::clear_entitytype() {
  entitytype_ = 0;
}
inline ::ENTITY Rename::entitytype() const {
  // @@protoc_insertion_point(field_get:Rename.EntityType)
  return static_cast< ::ENTITY >(entitytype_);
}
inline void Rename::set_entitytype(::ENTITY value) {
  
  entitytype_ = value;
  // @@protoc_insertion_point(field_set:Rename.EntityType)
}

// uint32 ContainerID = 2;
inline void Rename::clear_containerid() {
  containerid_ = 0u;
}
inline ::google::protobuf::uint32 Rename::containerid() const {
  // @@protoc_insertion_point(field_get:Rename.ContainerID)
  return containerid_;
}
inline void Rename::set_containerid(::google::protobuf::uint32 value) {
  
  containerid_ = value;
  // @@protoc_insertion_point(field_set:Rename.ContainerID)
}

// string LastName = 3;
inline void Rename::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rename::lastname() const {
  // @@protoc_insertion_point(field_get:Rename.LastName)
  return lastname_.GetNoArena();
}
inline void Rename::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Rename.LastName)
}
#if LANG_CXX11
inline void Rename::set_lastname(::std::string&& value) {
  
  lastname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Rename.LastName)
}
#endif
inline void Rename::set_lastname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Rename.LastName)
}
inline void Rename::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Rename.LastName)
}
inline ::std::string* Rename::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:Rename.LastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rename::release_lastname() {
  // @@protoc_insertion_point(field_release:Rename.LastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rename::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:Rename.LastName)
}

// string NewName = 4;
inline void Rename::clear_newname() {
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Rename::newname() const {
  // @@protoc_insertion_point(field_get:Rename.NewName)
  return newname_.GetNoArena();
}
inline void Rename::set_newname(const ::std::string& value) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Rename.NewName)
}
#if LANG_CXX11
inline void Rename::set_newname(::std::string&& value) {
  
  newname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Rename.NewName)
}
#endif
inline void Rename::set_newname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Rename.NewName)
}
inline void Rename::set_newname(const char* value, size_t size) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Rename.NewName)
}
inline ::std::string* Rename::mutable_newname() {
  
  // @@protoc_insertion_point(field_mutable:Rename.NewName)
  return newname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rename::release_newname() {
  // @@protoc_insertion_point(field_release:Rename.NewName)
  
  return newname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rename::set_allocated_newname(::std::string* newname) {
  if (newname != NULL) {
    
  } else {
    
  }
  newname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newname);
  // @@protoc_insertion_point(field_set_allocated:Rename.NewName)
}

// -------------------------------------------------------------------

// RenameClassAttribute

// uint32 ClassId = 1;
inline void RenameClassAttribute::clear_classid() {
  classid_ = 0u;
}
inline ::google::protobuf::uint32 RenameClassAttribute::classid() const {
  // @@protoc_insertion_point(field_get:RenameClassAttribute.ClassId)
  return classid_;
}
inline void RenameClassAttribute::set_classid(::google::protobuf::uint32 value) {
  
  classid_ = value;
  // @@protoc_insertion_point(field_set:RenameClassAttribute.ClassId)
}

// string LastName = 2;
inline void RenameClassAttribute::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameClassAttribute::lastname() const {
  // @@protoc_insertion_point(field_get:RenameClassAttribute.LastName)
  return lastname_.GetNoArena();
}
inline void RenameClassAttribute::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RenameClassAttribute.LastName)
}
#if LANG_CXX11
inline void RenameClassAttribute::set_lastname(::std::string&& value) {
  
  lastname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RenameClassAttribute.LastName)
}
#endif
inline void RenameClassAttribute::set_lastname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RenameClassAttribute.LastName)
}
inline void RenameClassAttribute::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RenameClassAttribute.LastName)
}
inline ::std::string* RenameClassAttribute::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:RenameClassAttribute.LastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameClassAttribute::release_lastname() {
  // @@protoc_insertion_point(field_release:RenameClassAttribute.LastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameClassAttribute::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:RenameClassAttribute.LastName)
}

// string NewName = 3;
inline void RenameClassAttribute::clear_newname() {
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameClassAttribute::newname() const {
  // @@protoc_insertion_point(field_get:RenameClassAttribute.NewName)
  return newname_.GetNoArena();
}
inline void RenameClassAttribute::set_newname(const ::std::string& value) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RenameClassAttribute.NewName)
}
#if LANG_CXX11
inline void RenameClassAttribute::set_newname(::std::string&& value) {
  
  newname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RenameClassAttribute.NewName)
}
#endif
inline void RenameClassAttribute::set_newname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RenameClassAttribute.NewName)
}
inline void RenameClassAttribute::set_newname(const char* value, size_t size) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RenameClassAttribute.NewName)
}
inline ::std::string* RenameClassAttribute::mutable_newname() {
  
  // @@protoc_insertion_point(field_mutable:RenameClassAttribute.NewName)
  return newname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameClassAttribute::release_newname() {
  // @@protoc_insertion_point(field_release:RenameClassAttribute.NewName)
  
  return newname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameClassAttribute::set_allocated_newname(::std::string* newname) {
  if (newname != NULL) {
    
  } else {
    
  }
  newname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newname);
  // @@protoc_insertion_point(field_set_allocated:RenameClassAttribute.NewName)
}

// -------------------------------------------------------------------

// SetContextParent

// uint32 ContextId = 1;
inline void SetContextParent::clear_contextid() {
  contextid_ = 0u;
}
inline ::google::protobuf::uint32 SetContextParent::contextid() const {
  // @@protoc_insertion_point(field_get:SetContextParent.ContextId)
  return contextid_;
}
inline void SetContextParent::set_contextid(::google::protobuf::uint32 value) {
  
  contextid_ = value;
  // @@protoc_insertion_point(field_set:SetContextParent.ContextId)
}

// uint32 ParentId = 2;
inline void SetContextParent::clear_parentid() {
  parentid_ = 0u;
}
inline ::google::protobuf::uint32 SetContextParent::parentid() const {
  // @@protoc_insertion_point(field_get:SetContextParent.ParentId)
  return parentid_;
}
inline void SetContextParent::set_parentid(::google::protobuf::uint32 value) {
  
  parentid_ = value;
  // @@protoc_insertion_point(field_set:SetContextParent.ParentId)
}

// -------------------------------------------------------------------

// SetEnumerationType

// uint32 EnumId = 1;
inline void SetEnumerationType::clear_enumid() {
  enumid_ = 0u;
}
inline ::google::protobuf::uint32 SetEnumerationType::enumid() const {
  // @@protoc_insertion_point(field_get:SetEnumerationType.EnumId)
  return enumid_;
}
inline void SetEnumerationType::set_enumid(::google::protobuf::uint32 value) {
  
  enumid_ = value;
  // @@protoc_insertion_point(field_set:SetEnumerationType.EnumId)
}

// uint32 TypeId = 2;
inline void SetEnumerationType::clear_typeid_() {
  typeid__ = 0u;
}
inline ::google::protobuf::uint32 SetEnumerationType::typeid_() const {
  // @@protoc_insertion_point(field_get:SetEnumerationType.TypeId)
  return typeid__;
}
inline void SetEnumerationType::set_typeid_(::google::protobuf::uint32 value) {
  
  typeid__ = value;
  // @@protoc_insertion_point(field_set:SetEnumerationType.TypeId)
}

// -------------------------------------------------------------------

// SetEnumerationValue

// uint32 EnumId = 1;
inline void SetEnumerationValue::clear_enumid() {
  enumid_ = 0u;
}
inline ::google::protobuf::uint32 SetEnumerationValue::enumid() const {
  // @@protoc_insertion_point(field_get:SetEnumerationValue.EnumId)
  return enumid_;
}
inline void SetEnumerationValue::set_enumid(::google::protobuf::uint32 value) {
  
  enumid_ = value;
  // @@protoc_insertion_point(field_set:SetEnumerationValue.EnumId)
}

// string Name = 2;
inline void SetEnumerationValue::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetEnumerationValue::name() const {
  // @@protoc_insertion_point(field_get:SetEnumerationValue.Name)
  return name_.GetNoArena();
}
inline void SetEnumerationValue::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetEnumerationValue.Name)
}
#if LANG_CXX11
inline void SetEnumerationValue::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetEnumerationValue.Name)
}
#endif
inline void SetEnumerationValue::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetEnumerationValue.Name)
}
inline void SetEnumerationValue::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetEnumerationValue.Name)
}
inline ::std::string* SetEnumerationValue::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:SetEnumerationValue.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetEnumerationValue::release_name() {
  // @@protoc_insertion_point(field_release:SetEnumerationValue.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetEnumerationValue::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SetEnumerationValue.Name)
}

// .Object Value = 3;
inline bool SetEnumerationValue::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void SetEnumerationValue::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
inline const ::Object& SetEnumerationValue::value() const {
  // @@protoc_insertion_point(field_get:SetEnumerationValue.Value)
  return value_ != NULL ? *value_
                         : *::Object::internal_default_instance();
}
inline ::Object* SetEnumerationValue::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::Object;
  }
  // @@protoc_insertion_point(field_mutable:SetEnumerationValue.Value)
  return value_;
}
inline ::Object* SetEnumerationValue::release_value() {
  // @@protoc_insertion_point(field_release:SetEnumerationValue.Value)
  
  ::Object* temp = value_;
  value_ = NULL;
  return temp;
}
inline void SetEnumerationValue::set_allocated_value(::Object* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SetEnumerationValue.Value)
}

// -------------------------------------------------------------------

// SetFunctionEntryPoint

// uint32 FunctionId = 1;
inline void SetFunctionEntryPoint::clear_functionid() {
  functionid_ = 0u;
}
inline ::google::protobuf::uint32 SetFunctionEntryPoint::functionid() const {
  // @@protoc_insertion_point(field_get:SetFunctionEntryPoint.FunctionId)
  return functionid_;
}
inline void SetFunctionEntryPoint::set_functionid(::google::protobuf::uint32 value) {
  
  functionid_ = value;
  // @@protoc_insertion_point(field_set:SetFunctionEntryPoint.FunctionId)
}

// uint32 Instruction = 2;
inline void SetFunctionEntryPoint::clear_instruction() {
  instruction_ = 0u;
}
inline ::google::protobuf::uint32 SetFunctionEntryPoint::instruction() const {
  // @@protoc_insertion_point(field_get:SetFunctionEntryPoint.Instruction)
  return instruction_;
}
inline void SetFunctionEntryPoint::set_instruction(::google::protobuf::uint32 value) {
  
  instruction_ = value;
  // @@protoc_insertion_point(field_set:SetFunctionEntryPoint.Instruction)
}

// -------------------------------------------------------------------

// SetFunctionParameter

// uint32 FuncId = 1;
inline void SetFunctionParameter::clear_funcid() {
  funcid_ = 0u;
}
inline ::google::protobuf::uint32 SetFunctionParameter::funcid() const {
  // @@protoc_insertion_point(field_get:SetFunctionParameter.FuncId)
  return funcid_;
}
inline void SetFunctionParameter::set_funcid(::google::protobuf::uint32 value) {
  
  funcid_ = value;
  // @@protoc_insertion_point(field_set:SetFunctionParameter.FuncId)
}

// string ExternalVarName = 2;
inline void SetFunctionParameter::clear_externalvarname() {
  externalvarname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetFunctionParameter::externalvarname() const {
  // @@protoc_insertion_point(field_get:SetFunctionParameter.ExternalVarName)
  return externalvarname_.GetNoArena();
}
inline void SetFunctionParameter::set_externalvarname(const ::std::string& value) {
  
  externalvarname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetFunctionParameter.ExternalVarName)
}
#if LANG_CXX11
inline void SetFunctionParameter::set_externalvarname(::std::string&& value) {
  
  externalvarname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetFunctionParameter.ExternalVarName)
}
#endif
inline void SetFunctionParameter::set_externalvarname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  externalvarname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetFunctionParameter.ExternalVarName)
}
inline void SetFunctionParameter::set_externalvarname(const char* value, size_t size) {
  
  externalvarname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetFunctionParameter.ExternalVarName)
}
inline ::std::string* SetFunctionParameter::mutable_externalvarname() {
  
  // @@protoc_insertion_point(field_mutable:SetFunctionParameter.ExternalVarName)
  return externalvarname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFunctionParameter::release_externalvarname() {
  // @@protoc_insertion_point(field_release:SetFunctionParameter.ExternalVarName)
  
  return externalvarname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFunctionParameter::set_allocated_externalvarname(::std::string* externalvarname) {
  if (externalvarname != NULL) {
    
  } else {
    
  }
  externalvarname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), externalvarname);
  // @@protoc_insertion_point(field_set_allocated:SetFunctionParameter.ExternalVarName)
}

// -------------------------------------------------------------------

// SetFunctionReturn

// uint32 FuncId = 1;
inline void SetFunctionReturn::clear_funcid() {
  funcid_ = 0u;
}
inline ::google::protobuf::uint32 SetFunctionReturn::funcid() const {
  // @@protoc_insertion_point(field_get:SetFunctionReturn.FuncId)
  return funcid_;
}
inline void SetFunctionReturn::set_funcid(::google::protobuf::uint32 value) {
  
  funcid_ = value;
  // @@protoc_insertion_point(field_set:SetFunctionReturn.FuncId)
}

// string ExternalVarName = 2;
inline void SetFunctionReturn::clear_externalvarname() {
  externalvarname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetFunctionReturn::externalvarname() const {
  // @@protoc_insertion_point(field_get:SetFunctionReturn.ExternalVarName)
  return externalvarname_.GetNoArena();
}
inline void SetFunctionReturn::set_externalvarname(const ::std::string& value) {
  
  externalvarname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetFunctionReturn.ExternalVarName)
}
#if LANG_CXX11
inline void SetFunctionReturn::set_externalvarname(::std::string&& value) {
  
  externalvarname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetFunctionReturn.ExternalVarName)
}
#endif
inline void SetFunctionReturn::set_externalvarname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  externalvarname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetFunctionReturn.ExternalVarName)
}
inline void SetFunctionReturn::set_externalvarname(const char* value, size_t size) {
  
  externalvarname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetFunctionReturn.ExternalVarName)
}
inline ::std::string* SetFunctionReturn::mutable_externalvarname() {
  
  // @@protoc_insertion_point(field_mutable:SetFunctionReturn.ExternalVarName)
  return externalvarname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFunctionReturn::release_externalvarname() {
  // @@protoc_insertion_point(field_release:SetFunctionReturn.ExternalVarName)
  
  return externalvarname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFunctionReturn::set_allocated_externalvarname(::std::string* externalvarname) {
  if (externalvarname != NULL) {
    
  } else {
    
  }
  externalvarname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), externalvarname);
  // @@protoc_insertion_point(field_set_allocated:SetFunctionReturn.ExternalVarName)
}

// -------------------------------------------------------------------

// SetInstructionInputValue

// uint32 FunctionID = 1;
inline void SetInstructionInputValue::clear_functionid() {
  functionid_ = 0u;
}
inline ::google::protobuf::uint32 SetInstructionInputValue::functionid() const {
  // @@protoc_insertion_point(field_get:SetInstructionInputValue.FunctionID)
  return functionid_;
}
inline void SetInstructionInputValue::set_functionid(::google::protobuf::uint32 value) {
  
  functionid_ = value;
  // @@protoc_insertion_point(field_set:SetInstructionInputValue.FunctionID)
}

// uint32 Instruction = 2;
inline void SetInstructionInputValue::clear_instruction() {
  instruction_ = 0u;
}
inline ::google::protobuf::uint32 SetInstructionInputValue::instruction() const {
  // @@protoc_insertion_point(field_get:SetInstructionInputValue.Instruction)
  return instruction_;
}
inline void SetInstructionInputValue::set_instruction(::google::protobuf::uint32 value) {
  
  instruction_ = value;
  // @@protoc_insertion_point(field_set:SetInstructionInputValue.Instruction)
}

// string InputName = 3;
inline void SetInstructionInputValue::clear_inputname() {
  inputname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetInstructionInputValue::inputname() const {
  // @@protoc_insertion_point(field_get:SetInstructionInputValue.InputName)
  return inputname_.GetNoArena();
}
inline void SetInstructionInputValue::set_inputname(const ::std::string& value) {
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetInstructionInputValue.InputName)
}
#if LANG_CXX11
inline void SetInstructionInputValue::set_inputname(::std::string&& value) {
  
  inputname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetInstructionInputValue.InputName)
}
#endif
inline void SetInstructionInputValue::set_inputname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetInstructionInputValue.InputName)
}
inline void SetInstructionInputValue::set_inputname(const char* value, size_t size) {
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetInstructionInputValue.InputName)
}
inline ::std::string* SetInstructionInputValue::mutable_inputname() {
  
  // @@protoc_insertion_point(field_mutable:SetInstructionInputValue.InputName)
  return inputname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetInstructionInputValue::release_inputname() {
  // @@protoc_insertion_point(field_release:SetInstructionInputValue.InputName)
  
  return inputname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetInstructionInputValue::set_allocated_inputname(::std::string* inputname) {
  if (inputname != NULL) {
    
  } else {
    
  }
  inputname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inputname);
  // @@protoc_insertion_point(field_set_allocated:SetInstructionInputValue.InputName)
}

// .Object InputValue = 4;
inline bool SetInstructionInputValue::has_inputvalue() const {
  return this != internal_default_instance() && inputvalue_ != NULL;
}
inline void SetInstructionInputValue::clear_inputvalue() {
  if (GetArenaNoVirtual() == NULL && inputvalue_ != NULL) delete inputvalue_;
  inputvalue_ = NULL;
}
inline const ::Object& SetInstructionInputValue::inputvalue() const {
  // @@protoc_insertion_point(field_get:SetInstructionInputValue.InputValue)
  return inputvalue_ != NULL ? *inputvalue_
                         : *::Object::internal_default_instance();
}
inline ::Object* SetInstructionInputValue::mutable_inputvalue() {
  
  if (inputvalue_ == NULL) {
    inputvalue_ = new ::Object;
  }
  // @@protoc_insertion_point(field_mutable:SetInstructionInputValue.InputValue)
  return inputvalue_;
}
inline ::Object* SetInstructionInputValue::release_inputvalue() {
  // @@protoc_insertion_point(field_release:SetInstructionInputValue.InputValue)
  
  ::Object* temp = inputvalue_;
  inputvalue_ = NULL;
  return temp;
}
inline void SetInstructionInputValue::set_allocated_inputvalue(::Object* inputvalue) {
  delete inputvalue_;
  inputvalue_ = inputvalue;
  if (inputvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SetInstructionInputValue.InputValue)
}

// -------------------------------------------------------------------

// SetListType

// uint32 ListId = 1;
inline void SetListType::clear_listid() {
  listid_ = 0u;
}
inline ::google::protobuf::uint32 SetListType::listid() const {
  // @@protoc_insertion_point(field_get:SetListType.ListId)
  return listid_;
}
inline void SetListType::set_listid(::google::protobuf::uint32 value) {
  
  listid_ = value;
  // @@protoc_insertion_point(field_set:SetListType.ListId)
}

// uint32 TypeId = 2;
inline void SetListType::clear_typeid_() {
  typeid__ = 0u;
}
inline ::google::protobuf::uint32 SetListType::typeid_() const {
  // @@protoc_insertion_point(field_get:SetListType.TypeId)
  return typeid__;
}
inline void SetListType::set_typeid_(::google::protobuf::uint32 value) {
  
  typeid__ = value;
  // @@protoc_insertion_point(field_set:SetListType.TypeId)
}

// -------------------------------------------------------------------

// SetVariableType

// uint32 VariableID = 1;
inline void SetVariableType::clear_variableid() {
  variableid_ = 0u;
}
inline ::google::protobuf::uint32 SetVariableType::variableid() const {
  // @@protoc_insertion_point(field_get:SetVariableType.VariableID)
  return variableid_;
}
inline void SetVariableType::set_variableid(::google::protobuf::uint32 value) {
  
  variableid_ = value;
  // @@protoc_insertion_point(field_set:SetVariableType.VariableID)
}

// uint32 TypeID = 2;
inline void SetVariableType::clear_typeid_() {
  typeid__ = 0u;
}
inline ::google::protobuf::uint32 SetVariableType::typeid_() const {
  // @@protoc_insertion_point(field_get:SetVariableType.TypeID)
  return typeid__;
}
inline void SetVariableType::set_typeid_(::google::protobuf::uint32 value) {
  
  typeid__ = value;
  // @@protoc_insertion_point(field_set:SetVariableType.TypeID)
}

// -------------------------------------------------------------------

// SetVariableValue

// uint32 VariableID = 1;
inline void SetVariableValue::clear_variableid() {
  variableid_ = 0u;
}
inline ::google::protobuf::uint32 SetVariableValue::variableid() const {
  // @@protoc_insertion_point(field_get:SetVariableValue.VariableID)
  return variableid_;
}
inline void SetVariableValue::set_variableid(::google::protobuf::uint32 value) {
  
  variableid_ = value;
  // @@protoc_insertion_point(field_set:SetVariableValue.VariableID)
}

// string Value = 2;
inline void SetVariableValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetVariableValue::value() const {
  // @@protoc_insertion_point(field_get:SetVariableValue.Value)
  return value_.GetNoArena();
}
inline void SetVariableValue::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetVariableValue.Value)
}
#if LANG_CXX11
inline void SetVariableValue::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetVariableValue.Value)
}
#endif
inline void SetVariableValue::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetVariableValue.Value)
}
inline void SetVariableValue::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetVariableValue.Value)
}
inline ::std::string* SetVariableValue::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:SetVariableValue.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetVariableValue::release_value() {
  // @@protoc_insertion_point(field_release:SetVariableValue.Value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetVariableValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:SetVariableValue.Value)
}

// -------------------------------------------------------------------

// UnlinkInstructionFlow

// uint32 FunctionID = 1;
inline void UnlinkInstructionFlow::clear_functionid() {
  functionid_ = 0u;
}
inline ::google::protobuf::uint32 UnlinkInstructionFlow::functionid() const {
  // @@protoc_insertion_point(field_get:UnlinkInstructionFlow.FunctionID)
  return functionid_;
}
inline void UnlinkInstructionFlow::set_functionid(::google::protobuf::uint32 value) {
  
  functionid_ = value;
  // @@protoc_insertion_point(field_set:UnlinkInstructionFlow.FunctionID)
}

// uint32 Instruction = 2;
inline void UnlinkInstructionFlow::clear_instruction() {
  instruction_ = 0u;
}
inline ::google::protobuf::uint32 UnlinkInstructionFlow::instruction() const {
  // @@protoc_insertion_point(field_get:UnlinkInstructionFlow.Instruction)
  return instruction_;
}
inline void UnlinkInstructionFlow::set_instruction(::google::protobuf::uint32 value) {
  
  instruction_ = value;
  // @@protoc_insertion_point(field_set:UnlinkInstructionFlow.Instruction)
}

// uint32 OutIndex = 3;
inline void UnlinkInstructionFlow::clear_outindex() {
  outindex_ = 0u;
}
inline ::google::protobuf::uint32 UnlinkInstructionFlow::outindex() const {
  // @@protoc_insertion_point(field_get:UnlinkInstructionFlow.OutIndex)
  return outindex_;
}
inline void UnlinkInstructionFlow::set_outindex(::google::protobuf::uint32 value) {
  
  outindex_ = value;
  // @@protoc_insertion_point(field_set:UnlinkInstructionFlow.OutIndex)
}

// -------------------------------------------------------------------

// UnlinkInstructionInput

// uint32 FunctionID = 1;
inline void UnlinkInstructionInput::clear_functionid() {
  functionid_ = 0u;
}
inline ::google::protobuf::uint32 UnlinkInstructionInput::functionid() const {
  // @@protoc_insertion_point(field_get:UnlinkInstructionInput.FunctionID)
  return functionid_;
}
inline void UnlinkInstructionInput::set_functionid(::google::protobuf::uint32 value) {
  
  functionid_ = value;
  // @@protoc_insertion_point(field_set:UnlinkInstructionInput.FunctionID)
}

// uint32 Instruction = 2;
inline void UnlinkInstructionInput::clear_instruction() {
  instruction_ = 0u;
}
inline ::google::protobuf::uint32 UnlinkInstructionInput::instruction() const {
  // @@protoc_insertion_point(field_get:UnlinkInstructionInput.Instruction)
  return instruction_;
}
inline void UnlinkInstructionInput::set_instruction(::google::protobuf::uint32 value) {
  
  instruction_ = value;
  // @@protoc_insertion_point(field_set:UnlinkInstructionInput.Instruction)
}

// string InputName = 3;
inline void UnlinkInstructionInput::clear_inputname() {
  inputname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnlinkInstructionInput::inputname() const {
  // @@protoc_insertion_point(field_get:UnlinkInstructionInput.InputName)
  return inputname_.GetNoArena();
}
inline void UnlinkInstructionInput::set_inputname(const ::std::string& value) {
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UnlinkInstructionInput.InputName)
}
#if LANG_CXX11
inline void UnlinkInstructionInput::set_inputname(::std::string&& value) {
  
  inputname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UnlinkInstructionInput.InputName)
}
#endif
inline void UnlinkInstructionInput::set_inputname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UnlinkInstructionInput.InputName)
}
inline void UnlinkInstructionInput::set_inputname(const char* value, size_t size) {
  
  inputname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UnlinkInstructionInput.InputName)
}
inline ::std::string* UnlinkInstructionInput::mutable_inputname() {
  
  // @@protoc_insertion_point(field_mutable:UnlinkInstructionInput.InputName)
  return inputname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlinkInstructionInput::release_inputname() {
  // @@protoc_insertion_point(field_release:UnlinkInstructionInput.InputName)
  
  return inputname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlinkInstructionInput::set_allocated_inputname(::std::string* inputname) {
  if (inputname != NULL) {
    
  } else {
    
  }
  inputname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inputname);
  // @@protoc_insertion_point(field_set_allocated:UnlinkInstructionInput.InputName)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ENTITY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ENTITY>() {
  return ::ENTITY_descriptor();
}
template <> struct is_proto_enum< ::INSTRUCTION_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::INSTRUCTION_ID>() {
  return ::INSTRUCTION_ID_descriptor();
}
template <> struct is_proto_enum< ::VISIBILITY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::VISIBILITY>() {
  return ::VISIBILITY_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_core_2eproto__INCLUDED
